Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLEQUOTE
    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> INT NAME EQUAL expression COLON
Rule 5     inst -> STRING NAME EQUAL TEXT COLON
Rule 6     inst -> BOOL NAME EQUAL BOOLEAN COLON
Rule 7     inst -> FLOAT NAME EQUAL expression COLON
Rule 8     inst -> NAME EQUAL expression COLON
Rule 9     inst -> NAME PLUSPLUS
Rule 10    inst -> NAME MINUSMINUS
Rule 11    inst -> NAME PLUS EQUAL NUMBER
Rule 12    inst -> NAME MINUS EQUAL NUMBER
Rule 13    inst -> PRINT LPAREN expression RPAREN COLON
Rule 14    inst -> PRINT LPAREN inst RPAREN COLON
Rule 15    inst -> PRINTSTRING LPAREN TEXT RPAREN COLON
Rule 16    inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 17    inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 18    inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
Rule 19    inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
Rule 20    compare -> <empty>
Rule 21    compare -> expression EQUALS expression
Rule 22    compare -> expression LOWER expression
Rule 23    compare -> expression HIGHER expression
Rule 24    inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 25    inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 26    inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 27    inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
Rule 28    inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
Rule 29    inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
Rule 30    inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 31    inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 32    inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 33    inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
Rule 34    inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
Rule 35    inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
Rule 36    inst -> INT NAME EQUAL inst
Rule 37    inst -> FLOAT NAME EQUAL inst
Rule 38    inst -> BOOL NAME EQUAL inst
Rule 39    inst -> STRING NAME EQUAL inst
Rule 40    params -> NAME COLON params
Rule 41    params -> NAME
Rule 42    inst -> NAME LPAREN args RPAREN COLON
Rule 43    args -> <empty>
Rule 44    args -> expression
Rule 45    args -> expression COLON args
Rule 46    expression -> expression PLUS expression
Rule 47    expression -> expression MINUS expression
Rule 48    expression -> expression TIMES expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> expression AND expression
Rule 51    expression -> expression EQUALS expression
Rule 52    expression -> expression LOWER expression
Rule 53    expression -> expression HIGHER expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> LPAREN expression RPAREN
Rule 56    expression -> NUMBER
Rule 57    expression -> NAME
Rule 58    expression -> TEXT

Terminals, with rules where they appear

AND                  : 50
BOOL                 : 6 27 28 33 34 38
BOOLEAN              : 6 27 33
COLON                : 4 5 6 7 8 13 14 15 19 25 26 27 28 29 31 32 33 34 35 40 42 45
DIVIDE               : 54
DO                   : 18
DOUBLEQUOTE          : 
EQUAL                : 4 5 6 7 8 11 12 36 37 38 39
EQUALS               : 21 51
FLOAT                : 7 26 32 37
FOR                  : 19
HIGHER               : 23 53
IF                   : 16
INT                  : 4 25 31 36
LBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35
LOWER                : 22 52
LPAREN               : 13 14 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35 42 55
MINUS                : 12 47
MINUSMINUS           : 10
NAME                 : 4 5 6 7 8 9 10 11 12 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 57
NUMBER               : 11 12 56
OR                   : 49
PLUS                 : 11 46
PLUSPLUS             : 9
PRINT                : 13 14
PRINTSTRING          : 15
RBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35
RETURN               : 25 26 27 28 29 31 32 33 34 35
RPAREN               : 13 14 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35 42 55
STRING               : 5 29 35 39
TEXT                 : 5 15 29 35 58
THEN                 : 
TIMES                : 48
VOID                 : 24 30
WHILE                : 17 18
error                : 

Nonterminals, with rules where they appear

args                 : 42 45
compare              : 19 28 34
expression           : 4 7 8 13 16 17 18 21 21 22 22 23 23 25 26 31 32 44 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55
inst                 : 2 3 14 19 19 36 37 38 39
linst                : 1 2 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35
params               : 30 31 32 33 34 35 40
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    $end            reduce using rule 1 (start -> linst .)
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 3

    (3) linst -> inst .

    INT             reduce using rule 3 (linst -> inst .)
    STRING          reduce using rule 3 (linst -> inst .)
    BOOL            reduce using rule 3 (linst -> inst .)
    FLOAT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    PRINTSTRING     reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    DO              reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    VOID            reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)
    RETURN          reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> INT . NAME EQUAL expression COLON
    (25) inst -> INT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> INT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (36) inst -> INT . NAME EQUAL inst

    NAME            shift and go to state 17


state 5

    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUSPLUS
    (10) inst -> NAME . MINUSMINUS
    (11) inst -> NAME . PLUS EQUAL NUMBER
    (12) inst -> NAME . MINUS EQUAL NUMBER
    (42) inst -> NAME . LPAREN args RPAREN COLON

    EQUAL           shift and go to state 18
    PLUSPLUS        shift and go to state 19
    MINUSMINUS      shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LPAREN          shift and go to state 23


state 6

    (5) inst -> STRING . NAME EQUAL TEXT COLON
    (29) inst -> STRING . NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (35) inst -> STRING . NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (39) inst -> STRING . NAME EQUAL inst

    NAME            shift and go to state 24


state 7

    (6) inst -> BOOL . NAME EQUAL BOOLEAN COLON
    (27) inst -> BOOL . NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL . NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (33) inst -> BOOL . NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL . NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (38) inst -> BOOL . NAME EQUAL inst

    NAME            shift and go to state 25


state 8

    (7) inst -> FLOAT . NAME EQUAL expression COLON
    (26) inst -> FLOAT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> FLOAT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (37) inst -> FLOAT . NAME EQUAL inst

    NAME            shift and go to state 26


state 9

    (13) inst -> PRINT . LPAREN expression RPAREN COLON
    (14) inst -> PRINT . LPAREN inst RPAREN COLON

    LPAREN          shift and go to state 27


state 10

    (15) inst -> PRINTSTRING . LPAREN TEXT RPAREN COLON

    LPAREN          shift and go to state 28


state 11

    (16) inst -> IF . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 29


state 12

    (17) inst -> WHILE . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 30


state 13

    (18) inst -> DO . LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN

    LBRACKET        shift and go to state 31


state 14

    (19) inst -> FOR . LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 32


state 15

    (24) inst -> VOID . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (30) inst -> VOID . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 33


state 16

    (2) linst -> linst inst .

    INT             reduce using rule 2 (linst -> linst inst .)
    STRING          reduce using rule 2 (linst -> linst inst .)
    BOOL            reduce using rule 2 (linst -> linst inst .)
    FLOAT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    PRINTSTRING     reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    DO              reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    VOID            reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)
    RETURN          reduce using rule 2 (linst -> linst inst .)


state 17

    (4) inst -> INT NAME . EQUAL expression COLON
    (25) inst -> INT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> INT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (36) inst -> INT NAME . EQUAL inst

    EQUAL           shift and go to state 34
    LPAREN          shift and go to state 35


state 18

    (8) inst -> NAME EQUAL . expression COLON
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 37

state 19

    (9) inst -> NAME PLUSPLUS .

    INT             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    STRING          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    BOOL            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FLOAT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NAME            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINTSTRING     reduce using rule 9 (inst -> NAME PLUSPLUS .)
    IF              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    WHILE           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    DO              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FOR             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    VOID            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    $end            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RBRACKET        reduce using rule 9 (inst -> NAME PLUSPLUS .)
    LPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NUMBER          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    TEXT            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    COLON           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RETURN          reduce using rule 9 (inst -> NAME PLUSPLUS .)


state 20

    (10) inst -> NAME MINUSMINUS .

    INT             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    STRING          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    BOOL            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FLOAT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NAME            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINTSTRING     reduce using rule 10 (inst -> NAME MINUSMINUS .)
    IF              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    WHILE           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    DO              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FOR             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    VOID            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    $end            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RBRACKET        reduce using rule 10 (inst -> NAME MINUSMINUS .)
    LPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NUMBER          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    TEXT            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    COLON           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RETURN          reduce using rule 10 (inst -> NAME MINUSMINUS .)


state 21

    (11) inst -> NAME PLUS . EQUAL NUMBER

    EQUAL           shift and go to state 41


state 22

    (12) inst -> NAME MINUS . EQUAL NUMBER

    EQUAL           shift and go to state 42


state 23

    (42) inst -> NAME LPAREN . args RPAREN COLON
    (43) args -> .
    (44) args -> . expression
    (45) args -> . expression COLON args
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    RPAREN          reduce using rule 43 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    args                           shift and go to state 43
    expression                     shift and go to state 44

state 24

    (5) inst -> STRING NAME . EQUAL TEXT COLON
    (29) inst -> STRING NAME . LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (35) inst -> STRING NAME . LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (39) inst -> STRING NAME . EQUAL inst

    EQUAL           shift and go to state 45
    LPAREN          shift and go to state 46


state 25

    (6) inst -> BOOL NAME . EQUAL BOOLEAN COLON
    (27) inst -> BOOL NAME . LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME . LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (33) inst -> BOOL NAME . LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME . LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (38) inst -> BOOL NAME . EQUAL inst

    EQUAL           shift and go to state 47
    LPAREN          shift and go to state 48


state 26

    (7) inst -> FLOAT NAME . EQUAL expression COLON
    (26) inst -> FLOAT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> FLOAT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (37) inst -> FLOAT NAME . EQUAL inst

    EQUAL           shift and go to state 49
    LPAREN          shift and go to state 50


state 27

    (13) inst -> PRINT LPAREN . expression RPAREN COLON
    (14) inst -> PRINT LPAREN . inst RPAREN COLON
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 53
    TEXT            shift and go to state 40
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    expression                     shift and go to state 51
    inst                           shift and go to state 52

state 28

    (15) inst -> PRINTSTRING LPAREN . TEXT RPAREN COLON

    TEXT            shift and go to state 54


state 29

    (16) inst -> IF LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 55

state 30

    (17) inst -> WHILE LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 56

state 31

    (18) inst -> DO LBRACKET . linst RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 57
    inst                           shift and go to state 3

state 32

    (19) inst -> FOR LPAREN . inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 58

state 33

    (24) inst -> VOID NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (30) inst -> VOID NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 59


state 34

    (4) inst -> INT NAME EQUAL . expression COLON
    (36) inst -> INT NAME EQUAL . inst
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 53
    TEXT            shift and go to state 40
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    expression                     shift and go to state 60
    inst                           shift and go to state 61

state 35

    (25) inst -> INT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> INT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    RPAREN          shift and go to state 63
    NAME            shift and go to state 62

    params                         shift and go to state 64

state 36

    (57) expression -> NAME .

    COLON           reduce using rule 57 (expression -> NAME .)
    PLUS            reduce using rule 57 (expression -> NAME .)
    MINUS           reduce using rule 57 (expression -> NAME .)
    TIMES           reduce using rule 57 (expression -> NAME .)
    OR              reduce using rule 57 (expression -> NAME .)
    AND             reduce using rule 57 (expression -> NAME .)
    EQUALS          reduce using rule 57 (expression -> NAME .)
    LOWER           reduce using rule 57 (expression -> NAME .)
    HIGHER          reduce using rule 57 (expression -> NAME .)
    DIVIDE          reduce using rule 57 (expression -> NAME .)
    RPAREN          reduce using rule 57 (expression -> NAME .)


state 37

    (8) inst -> NAME EQUAL expression . COLON
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 65
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 38

    (55) expression -> LPAREN . expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 75

state 39

    (56) expression -> NUMBER .

    COLON           reduce using rule 56 (expression -> NUMBER .)
    PLUS            reduce using rule 56 (expression -> NUMBER .)
    MINUS           reduce using rule 56 (expression -> NUMBER .)
    TIMES           reduce using rule 56 (expression -> NUMBER .)
    OR              reduce using rule 56 (expression -> NUMBER .)
    AND             reduce using rule 56 (expression -> NUMBER .)
    EQUALS          reduce using rule 56 (expression -> NUMBER .)
    LOWER           reduce using rule 56 (expression -> NUMBER .)
    HIGHER          reduce using rule 56 (expression -> NUMBER .)
    DIVIDE          reduce using rule 56 (expression -> NUMBER .)
    RPAREN          reduce using rule 56 (expression -> NUMBER .)


state 40

    (58) expression -> TEXT .

    COLON           reduce using rule 58 (expression -> TEXT .)
    PLUS            reduce using rule 58 (expression -> TEXT .)
    MINUS           reduce using rule 58 (expression -> TEXT .)
    TIMES           reduce using rule 58 (expression -> TEXT .)
    OR              reduce using rule 58 (expression -> TEXT .)
    AND             reduce using rule 58 (expression -> TEXT .)
    EQUALS          reduce using rule 58 (expression -> TEXT .)
    LOWER           reduce using rule 58 (expression -> TEXT .)
    HIGHER          reduce using rule 58 (expression -> TEXT .)
    DIVIDE          reduce using rule 58 (expression -> TEXT .)
    RPAREN          reduce using rule 58 (expression -> TEXT .)


state 41

    (11) inst -> NAME PLUS EQUAL . NUMBER

    NUMBER          shift and go to state 76


state 42

    (12) inst -> NAME MINUS EQUAL . NUMBER

    NUMBER          shift and go to state 77


state 43

    (42) inst -> NAME LPAREN args . RPAREN COLON

    RPAREN          shift and go to state 78


state 44

    (44) args -> expression .
    (45) args -> expression . COLON args
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 44 (args -> expression .)
    COLON           shift and go to state 79
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 45

    (5) inst -> STRING NAME EQUAL . TEXT COLON
    (39) inst -> STRING NAME EQUAL . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    TEXT            shift and go to state 80
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 81

state 46

    (29) inst -> STRING NAME LPAREN . RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (35) inst -> STRING NAME LPAREN . params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    RPAREN          shift and go to state 82
    NAME            shift and go to state 62

    params                         shift and go to state 83

state 47

    (6) inst -> BOOL NAME EQUAL . BOOLEAN COLON
    (38) inst -> BOOL NAME EQUAL . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    BOOLEAN         shift and go to state 84
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 85

state 48

    (27) inst -> BOOL NAME LPAREN . RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME LPAREN . RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (33) inst -> BOOL NAME LPAREN . params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN . params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    RPAREN          shift and go to state 86
    NAME            shift and go to state 62

    params                         shift and go to state 87

state 49

    (7) inst -> FLOAT NAME EQUAL . expression COLON
    (37) inst -> FLOAT NAME EQUAL . inst
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 53
    TEXT            shift and go to state 40
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    expression                     shift and go to state 88
    inst                           shift and go to state 89

state 50

    (26) inst -> FLOAT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> FLOAT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    RPAREN          shift and go to state 90
    NAME            shift and go to state 62

    params                         shift and go to state 91

state 51

    (13) inst -> PRINT LPAREN expression . RPAREN COLON
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 52

    (14) inst -> PRINT LPAREN inst . RPAREN COLON

    RPAREN          shift and go to state 93


state 53

    (57) expression -> NAME .
    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUSPLUS
    (10) inst -> NAME . MINUSMINUS
    (11) inst -> NAME . PLUS EQUAL NUMBER
    (12) inst -> NAME . MINUS EQUAL NUMBER
    (42) inst -> NAME . LPAREN args RPAREN COLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RPAREN          reduce using rule 57 (expression -> NAME .)
    TIMES           reduce using rule 57 (expression -> NAME .)
    OR              reduce using rule 57 (expression -> NAME .)
    AND             reduce using rule 57 (expression -> NAME .)
    EQUALS          reduce using rule 57 (expression -> NAME .)
    LOWER           reduce using rule 57 (expression -> NAME .)
    HIGHER          reduce using rule 57 (expression -> NAME .)
    DIVIDE          reduce using rule 57 (expression -> NAME .)
    COLON           reduce using rule 57 (expression -> NAME .)
    EQUAL           shift and go to state 18
    PLUSPLUS        shift and go to state 19
    MINUSMINUS      shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LPAREN          shift and go to state 23

  ! PLUS            [ reduce using rule 57 (expression -> NAME .) ]
  ! MINUS           [ reduce using rule 57 (expression -> NAME .) ]


state 54

    (15) inst -> PRINTSTRING LPAREN TEXT . RPAREN COLON

    RPAREN          shift and go to state 94


state 55

    (16) inst -> IF LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 56

    (17) inst -> WHILE LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 57

    (18) inst -> DO LBRACKET linst . RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 97
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 58

    (19) inst -> FOR LPAREN inst . compare COLON inst RPAREN LBRACKET linst RBRACKET
    (20) compare -> .
    (21) compare -> . expression EQUALS expression
    (22) compare -> . expression LOWER expression
    (23) compare -> . expression HIGHER expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    COLON           reduce using rule 20 (compare -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    compare                        shift and go to state 98
    expression                     shift and go to state 99

state 59

    (24) inst -> VOID NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (30) inst -> VOID NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    RPAREN          shift and go to state 100
    NAME            shift and go to state 62

    params                         shift and go to state 101

state 60

    (4) inst -> INT NAME EQUAL expression . COLON
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 102
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 61

    (36) inst -> INT NAME EQUAL inst .

    INT             reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    STRING          reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    BOOL            reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    FLOAT           reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    NAME            reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    PRINT           reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    PRINTSTRING     reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    IF              reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    WHILE           reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    DO              reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    FOR             reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    VOID            reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    $end            reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    RPAREN          reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    RBRACKET        reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    LPAREN          reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    NUMBER          reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    TEXT            reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    COLON           reduce using rule 36 (inst -> INT NAME EQUAL inst .)
    RETURN          reduce using rule 36 (inst -> INT NAME EQUAL inst .)


state 62

    (40) params -> NAME . COLON params
    (41) params -> NAME .

    COLON           shift and go to state 103
    RPAREN          reduce using rule 41 (params -> NAME .)


state 63

    (25) inst -> INT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 104


state 64

    (31) inst -> INT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 105


state 65

    (8) inst -> NAME EQUAL expression COLON .

    INT             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    STRING          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    BOOL            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NAME            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    IF              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    WHILE           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    DO              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FOR             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    VOID            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    $end            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    TEXT            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    COLON           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RETURN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)


state 66

    (46) expression -> expression PLUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 106

state 67

    (47) expression -> expression MINUS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 107

state 68

    (48) expression -> expression TIMES . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 108

state 69

    (49) expression -> expression OR . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 109

state 70

    (50) expression -> expression AND . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 110

state 71

    (51) expression -> expression EQUALS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 111

state 72

    (52) expression -> expression LOWER . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 112

state 73

    (53) expression -> expression HIGHER . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 113

state 74

    (54) expression -> expression DIVIDE . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 114

state 75

    (55) expression -> LPAREN expression . RPAREN
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 76

    (11) inst -> NAME PLUS EQUAL NUMBER .

    INT             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    STRING          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    BOOL            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FLOAT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NAME            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    IF              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    WHILE           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    DO              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FOR             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    VOID            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    $end            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    LPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NUMBER          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    TEXT            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    COLON           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RETURN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)


state 77

    (12) inst -> NAME MINUS EQUAL NUMBER .

    INT             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    STRING          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    BOOL            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FLOAT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NAME            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    IF              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    WHILE           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    DO              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FOR             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    VOID            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    $end            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    LPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NUMBER          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    TEXT            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    COLON           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RETURN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)


state 78

    (42) inst -> NAME LPAREN args RPAREN . COLON

    COLON           shift and go to state 116


state 79

    (45) args -> expression COLON . args
    (43) args -> .
    (44) args -> . expression
    (45) args -> . expression COLON args
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    RPAREN          reduce using rule 43 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 44
    args                           shift and go to state 117

state 80

    (5) inst -> STRING NAME EQUAL TEXT . COLON

    COLON           shift and go to state 118


state 81

    (39) inst -> STRING NAME EQUAL inst .

    INT             reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    STRING          reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    BOOL            reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    FLOAT           reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    NAME            reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    PRINT           reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    PRINTSTRING     reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    IF              reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    WHILE           reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    DO              reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    FOR             reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    VOID            reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    $end            reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    RPAREN          reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    RBRACKET        reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    LPAREN          reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    NUMBER          reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    TEXT            reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    COLON           reduce using rule 39 (inst -> STRING NAME EQUAL inst .)
    RETURN          reduce using rule 39 (inst -> STRING NAME EQUAL inst .)


state 82

    (29) inst -> STRING NAME LPAREN RPAREN . LBRACKET linst RETURN TEXT COLON RBRACKET

    LBRACKET        shift and go to state 119


state 83

    (35) inst -> STRING NAME LPAREN params . RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET

    RPAREN          shift and go to state 120


state 84

    (6) inst -> BOOL NAME EQUAL BOOLEAN . COLON

    COLON           shift and go to state 121


state 85

    (38) inst -> BOOL NAME EQUAL inst .

    INT             reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    STRING          reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    BOOL            reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    FLOAT           reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    NAME            reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    PRINT           reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    PRINTSTRING     reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    IF              reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    WHILE           reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    DO              reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    FOR             reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    VOID            reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    $end            reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    RPAREN          reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    RBRACKET        reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    LPAREN          reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    NUMBER          reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    TEXT            reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    COLON           reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)
    RETURN          reduce using rule 38 (inst -> BOOL NAME EQUAL inst .)


state 86

    (27) inst -> BOOL NAME LPAREN RPAREN . LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME LPAREN RPAREN . LBRACKET linst RETURN compare COLON RBRACKET

    LBRACKET        shift and go to state 122


state 87

    (33) inst -> BOOL NAME LPAREN params . RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN params . RPAREN LBRACKET linst RETURN compare COLON RBRACKET

    RPAREN          shift and go to state 123


state 88

    (7) inst -> FLOAT NAME EQUAL expression . COLON
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 124
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 89

    (37) inst -> FLOAT NAME EQUAL inst .

    INT             reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    STRING          reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    BOOL            reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    FLOAT           reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    NAME            reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    PRINT           reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    PRINTSTRING     reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    IF              reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    WHILE           reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    DO              reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    FOR             reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    VOID            reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    $end            reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    RPAREN          reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    RBRACKET        reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    LPAREN          reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    NUMBER          reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    TEXT            reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    COLON           reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)
    RETURN          reduce using rule 37 (inst -> FLOAT NAME EQUAL inst .)


state 90

    (26) inst -> FLOAT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 125


state 91

    (32) inst -> FLOAT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 126


state 92

    (13) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 127


state 93

    (14) inst -> PRINT LPAREN inst RPAREN . COLON

    COLON           shift and go to state 128


state 94

    (15) inst -> PRINTSTRING LPAREN TEXT RPAREN . COLON

    COLON           shift and go to state 129


state 95

    (16) inst -> IF LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 130


state 96

    (17) inst -> WHILE LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 131


state 97

    (18) inst -> DO LBRACKET linst RBRACKET . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 132


state 98

    (19) inst -> FOR LPAREN inst compare . COLON inst RPAREN LBRACKET linst RBRACKET

    COLON           shift and go to state 133


state 99

    (21) compare -> expression . EQUALS expression
    (22) compare -> expression . LOWER expression
    (23) compare -> expression . HIGHER expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    EQUALS          shift and go to state 134
    LOWER           shift and go to state 135
    HIGHER          shift and go to state 136
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    DIVIDE          shift and go to state 74


state 100

    (24) inst -> VOID NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 137


state 101

    (30) inst -> VOID NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 138


state 102

    (4) inst -> INT NAME EQUAL expression COLON .

    INT             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    STRING          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NAME            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    IF              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    DO              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FOR             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    VOID            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    $end            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    COLON           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)


state 103

    (40) params -> NAME COLON . params
    (40) params -> . NAME COLON params
    (41) params -> . NAME

    NAME            shift and go to state 62

    params                         shift and go to state 139

state 104

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 140
    inst                           shift and go to state 3

state 105

    (31) inst -> INT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 141


state 106

    (46) expression -> expression PLUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 46 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression PLUS expression .) ]


state 107

    (47) expression -> expression MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 47 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINUS expression .) ]


state 108

    (48) expression -> expression TIMES expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 48 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 48 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 48 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression TIMES expression .) ]


state 109

    (49) expression -> expression OR expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 49 (expression -> expression OR expression .)
    RPAREN          reduce using rule 49 (expression -> expression OR expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression OR expression .) ]


state 110

    (50) expression -> expression AND expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 50 (expression -> expression AND expression .)
    RPAREN          reduce using rule 50 (expression -> expression AND expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 50 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression AND expression .) ]


state 111

    (51) expression -> expression EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 51 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 51 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]


state 112

    (52) expression -> expression LOWER expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 52 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 52 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression LOWER expression .) ]


state 113

    (53) expression -> expression HIGHER expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 53 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 53 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]


state 114

    (54) expression -> expression DIVIDE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 54 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 54 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]


state 115

    (55) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 55 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 55 (expression -> LPAREN expression RPAREN .)


state 116

    (42) inst -> NAME LPAREN args RPAREN COLON .

    INT             reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    STRING          reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    BOOL            reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    FLOAT           reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    NAME            reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINT           reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINTSTRING     reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    IF              reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    WHILE           reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    DO              reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    FOR             reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    VOID            reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    $end            reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    RPAREN          reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    RBRACKET        reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    LPAREN          reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    NUMBER          reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    TEXT            reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    COLON           reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)
    RETURN          reduce using rule 42 (inst -> NAME LPAREN args RPAREN COLON .)


state 117

    (45) args -> expression COLON args .

    RPAREN          reduce using rule 45 (args -> expression COLON args .)


state 118

    (5) inst -> STRING NAME EQUAL TEXT COLON .

    INT             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    STRING          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    BOOL            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FLOAT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NAME            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINTSTRING     reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    IF              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    WHILE           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    DO              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FOR             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    VOID            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    $end            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RBRACKET        reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    LPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NUMBER          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    TEXT            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    COLON           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RETURN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)


state 119

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET . linst RETURN TEXT COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 142
    inst                           shift and go to state 3

state 120

    (35) inst -> STRING NAME LPAREN params RPAREN . LBRACKET linst RETURN TEXT COLON RBRACKET

    LBRACKET        shift and go to state 143


state 121

    (6) inst -> BOOL NAME EQUAL BOOLEAN COLON .

    INT             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    STRING          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    BOOL            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FLOAT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NAME            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINTSTRING     reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    IF              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    WHILE           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    DO              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FOR             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    VOID            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    $end            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RBRACKET        reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    LPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NUMBER          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    TEXT            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    COLON           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RETURN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)


state 122

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET . linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET . linst RETURN compare COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 144
    inst                           shift and go to state 3

state 123

    (33) inst -> BOOL NAME LPAREN params RPAREN . LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN params RPAREN . LBRACKET linst RETURN compare COLON RBRACKET

    LBRACKET        shift and go to state 145


state 124

    (7) inst -> FLOAT NAME EQUAL expression COLON .

    INT             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    STRING          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NAME            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    IF              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    DO              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FOR             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    VOID            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    $end            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    COLON           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)


state 125

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 146
    inst                           shift and go to state 3

state 126

    (32) inst -> FLOAT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 147


state 127

    (13) inst -> PRINT LPAREN expression RPAREN COLON .

    INT             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    STRING          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    BOOL            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FLOAT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINTSTRING     reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    DO              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    VOID            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    TEXT            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    COLON           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RETURN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 128

    (14) inst -> PRINT LPAREN inst RPAREN COLON .

    INT             reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    STRING          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    BOOL            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    FLOAT           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    NAME            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    PRINT           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    PRINTSTRING     reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    IF              reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    WHILE           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    DO              reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    FOR             reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    VOID            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    $end            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RPAREN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RBRACKET        reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    LPAREN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    NUMBER          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    TEXT            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    COLON           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RETURN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)


state 129

    (15) inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .

    INT             reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    STRING          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    BOOL            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FLOAT           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NAME            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINT           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINTSTRING     reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    IF              reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    WHILE           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    DO              reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FOR             reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    VOID            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    $end            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RBRACKET        reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    LPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NUMBER          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    TEXT            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    COLON           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RETURN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)


state 130

    (16) inst -> IF LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 148
    inst                           shift and go to state 3

state 131

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 149
    inst                           shift and go to state 3

state 132

    (18) inst -> DO LBRACKET linst RBRACKET WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 150


state 133

    (19) inst -> FOR LPAREN inst compare COLON . inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 151

state 134

    (21) compare -> expression EQUALS . expression
    (51) expression -> expression EQUALS . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 152

state 135

    (22) compare -> expression LOWER . expression
    (52) expression -> expression LOWER . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 153

state 136

    (23) compare -> expression HIGHER . expression
    (53) expression -> expression HIGHER . expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 154

state 137

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 155
    inst                           shift and go to state 3

state 138

    (30) inst -> VOID NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 156


state 139

    (40) params -> NAME COLON params .

    RPAREN          reduce using rule 40 (params -> NAME COLON params .)


state 140

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 157
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 141

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 158
    inst                           shift and go to state 3

state 142

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET linst . RETURN TEXT COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 159
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 143

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET . linst RETURN TEXT COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 160
    inst                           shift and go to state 3

state 144

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst . RETURN BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst . RETURN compare COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 161
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 145

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET . linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET . linst RETURN compare COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 162
    inst                           shift and go to state 3

state 146

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 163
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 147

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 164
    inst                           shift and go to state 3

state 148

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 165
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 149

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 166
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 150

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN . expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 167

state 151

    (19) inst -> FOR LPAREN inst compare COLON inst . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 168


state 152

    (21) compare -> expression EQUALS expression .
    (51) expression -> expression EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 21 (compare -> expression EQUALS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 51 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression EQUALS expression .) ]


state 153

    (22) compare -> expression LOWER expression .
    (52) expression -> expression LOWER expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 22 (compare -> expression LOWER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression LOWER expression .) ]


state 154

    (23) compare -> expression HIGHER expression .
    (53) expression -> expression HIGHER expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 23 (compare -> expression HIGHER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression HIGHER expression .) ]


state 155

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 169
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 156

    (30) inst -> VOID NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 170
    inst                           shift and go to state 3

state 157

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 171

state 158

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 172
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 159

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN . TEXT COLON RBRACKET

    TEXT            shift and go to state 173


state 160

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst . RETURN TEXT COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 174
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 161

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN . BOOLEAN COLON RBRACKET
    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN . compare COLON RBRACKET
    (20) compare -> .
    (21) compare -> . expression EQUALS expression
    (22) compare -> . expression LOWER expression
    (23) compare -> . expression HIGHER expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    BOOLEAN         shift and go to state 175
    COLON           reduce using rule 20 (compare -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    compare                        shift and go to state 176
    expression                     shift and go to state 99

state 162

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst . RETURN BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst . RETURN compare COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 177
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 163

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 178

state 164

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 179
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 165

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 166

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 167

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression . RPAREN
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 180
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 168

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 181


state 169

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 170

    (30) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 182
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 171

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 183
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 172

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 184

state 173

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT . COLON RBRACKET

    COLON           shift and go to state 185


state 174

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN . TEXT COLON RBRACKET

    TEXT            shift and go to state 186


state 175

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN . COLON RBRACKET

    COLON           shift and go to state 187


state 176

    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare . COLON RBRACKET

    COLON           shift and go to state 188


state 177

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN . BOOLEAN COLON RBRACKET
    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN . compare COLON RBRACKET
    (20) compare -> .
    (21) compare -> . expression EQUALS expression
    (22) compare -> . expression LOWER expression
    (23) compare -> . expression HIGHER expression
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    BOOLEAN         shift and go to state 189
    COLON           reduce using rule 20 (compare -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    compare                        shift and go to state 190
    expression                     shift and go to state 99

state 178

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 191
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 179

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression MINUS expression
    (48) expression -> . expression TIMES expression
    (49) expression -> . expression OR expression
    (50) expression -> . expression AND expression
    (51) expression -> . expression EQUALS expression
    (52) expression -> . expression LOWER expression
    (53) expression -> . expression HIGHER expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . LPAREN expression RPAREN
    (56) expression -> . NUMBER
    (57) expression -> . NAME
    (58) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 192

state 180

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .

    INT             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    BOOL            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FLOAT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NAME            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINTSTRING     reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    VOID            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    $end            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NUMBER          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    TEXT            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    COLON           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)


state 181

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 3
    linst                          shift and go to state 193

state 182

    (30) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 30 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 183

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 194


state 184

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 195
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 185

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON . RBRACKET

    RBRACKET        shift and go to state 196


state 186

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT . COLON RBRACKET

    COLON           shift and go to state 197


state 187

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON . RBRACKET

    RBRACKET        shift and go to state 198


state 188

    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON . RBRACKET

    RBRACKET        shift and go to state 199


state 189

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN . COLON RBRACKET

    COLON           shift and go to state 200


state 190

    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare . COLON RBRACKET

    COLON           shift and go to state 201


state 191

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 202


state 192

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . MINUS expression
    (48) expression -> expression . TIMES expression
    (49) expression -> expression . OR expression
    (50) expression -> expression . AND expression
    (51) expression -> expression . EQUALS expression
    (52) expression -> expression . LOWER expression
    (53) expression -> expression . HIGHER expression
    (54) expression -> expression . DIVIDE expression

    COLON           shift and go to state 203
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 193

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (28) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (29) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (30) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET
    (34) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET
    (35) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET
    (36) inst -> . INT NAME EQUAL inst
    (37) inst -> . FLOAT NAME EQUAL inst
    (38) inst -> . BOOL NAME EQUAL inst
    (39) inst -> . STRING NAME EQUAL inst
    (42) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 204
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 194

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 195

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 205


state 196

    (29) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .

    INT             reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    STRING          reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    BOOL            reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    FLOAT           reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    NAME            reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    PRINT           reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    PRINTSTRING     reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    IF              reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    WHILE           reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    DO              reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    FOR             reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    VOID            reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    $end            reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RPAREN          reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RBRACKET        reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    LPAREN          reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    NUMBER          reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    TEXT            reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    COLON           reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RETURN          reduce using rule 29 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)


state 197

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON . RBRACKET

    RBRACKET        shift and go to state 206


state 198

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .

    INT             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    STRING          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    BOOL            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    FLOAT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    NAME            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    PRINT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    PRINTSTRING     reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    IF              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    WHILE           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    DO              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    FOR             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    VOID            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    $end            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RBRACKET        reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    LPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    NUMBER          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    TEXT            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    COLON           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RETURN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)


state 199

    (28) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .

    INT             reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    STRING          reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    BOOL            reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    FLOAT           reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    NAME            reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    PRINT           reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    PRINTSTRING     reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    IF              reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    WHILE           reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    DO              reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    FOR             reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    VOID            reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    $end            reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RPAREN          reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RBRACKET        reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    LPAREN          reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    NUMBER          reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    TEXT            reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    COLON           reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RETURN          reduce using rule 28 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)


state 200

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON . RBRACKET

    RBRACKET        shift and go to state 207


state 201

    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON . RBRACKET

    RBRACKET        shift and go to state 208


state 202

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 203

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 209


state 204

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)


state 205

    (31) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 31 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 206

    (35) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .

    INT             reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    STRING          reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    BOOL            reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    FLOAT           reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    NAME            reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    PRINT           reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    PRINTSTRING     reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    IF              reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    WHILE           reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    DO              reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    FOR             reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    VOID            reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    $end            reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RPAREN          reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RBRACKET        reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    LPAREN          reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    NUMBER          reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    TEXT            reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    COLON           reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)
    RETURN          reduce using rule 35 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN TEXT COLON RBRACKET .)


state 207

    (33) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .

    INT             reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    STRING          reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    BOOL            reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    FLOAT           reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    NAME            reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    PRINT           reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    PRINTSTRING     reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    IF              reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    WHILE           reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    DO              reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    FOR             reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    VOID            reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    $end            reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RPAREN          reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RBRACKET        reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    LPAREN          reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    NUMBER          reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    TEXT            reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    COLON           reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)
    RETURN          reduce using rule 33 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN BOOLEAN COLON RBRACKET .)


state 208

    (34) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .

    INT             reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    STRING          reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    BOOL            reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    FLOAT           reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    NAME            reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    PRINT           reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    PRINTSTRING     reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    IF              reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    WHILE           reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    DO              reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    FOR             reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    VOID            reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    $end            reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RPAREN          reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RBRACKET        reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    LPAREN          reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    NUMBER          reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    TEXT            reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    COLON           reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)
    RETURN          reduce using rule 34 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN compare COLON RBRACKET .)


state 209

    (32) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 32 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 106 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 107 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 108 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 108 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 109 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 110 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 110 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 111 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 111 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 112 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 112 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 113 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 113 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 114 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 114 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 114 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 152 resolved as shift
WARNING: shift/reduce conflict for OR in state 152 resolved as shift
WARNING: shift/reduce conflict for AND in state 152 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 152 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 152 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 153 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 153 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 153 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 154 resolved as shift
WARNING: shift/reduce conflict for OR in state 154 resolved as shift
WARNING: shift/reduce conflict for AND in state 154 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 154 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 154 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 154 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 154 resolved as shift
