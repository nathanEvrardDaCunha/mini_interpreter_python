Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLEQUOTE
    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> INT NAME EQUAL expression COLON
Rule 5     inst -> STRING NAME EQUAL TEXT COLON
Rule 6     inst -> BOOL NAME EQUAL BOOLEAN COLON
Rule 7     inst -> FLOAT NAME EQUAL expression COLON
Rule 8     inst -> NAME EQUAL expression COLON
Rule 9     inst -> NAME PLUSPLUS
Rule 10    inst -> NAME MINUSMINUS
Rule 11    inst -> NAME PLUS EQUAL NUMBER
Rule 12    inst -> NAME MINUS EQUAL NUMBER
Rule 13    inst -> PRINT LPAREN expression RPAREN COLON
Rule 14    inst -> PRINTSTRING LPAREN TEXT RPAREN COLON
Rule 15    inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 16    inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 17    inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
Rule 18    inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
Rule 19    compare -> <empty>
Rule 20    compare -> expression EQUALS expression
Rule 21    compare -> expression LOWER expression
Rule 22    compare -> expression HIGHER expression
Rule 23    inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 24    inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 25    inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 26    inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 27    inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 28    inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 29    inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 30    inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 31    inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 32    inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 33    params -> NAME COLON params
Rule 34    params -> NAME
Rule 35    inst -> NAME LPAREN args RPAREN COLON
Rule 36    args -> <empty>
Rule 37    args -> expression
Rule 38    args -> expression COLON args
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression TIMES expression
Rule 42    expression -> expression OR expression
Rule 43    expression -> expression AND expression
Rule 44    expression -> expression EQUALS expression
Rule 45    expression -> expression LOWER expression
Rule 46    expression -> expression HIGHER expression
Rule 47    expression -> expression DIVIDE expression
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    expression -> NUMBER
Rule 50    expression -> NAME
Rule 51    expression -> TEXT

Terminals, with rules where they appear

AND                  : 43
BOOL                 : 6 26 31
BOOLEAN              : 6
COLON                : 4 5 6 7 8 13 14 18 24 25 26 27 29 30 31 32 33 35 38
DIVIDE               : 47
DO                   : 17
DOUBLEQUOTE          : 
EQUAL                : 4 5 6 7 8 11 12
EQUALS               : 20 44
FLOAT                : 7 25 30
FOR                  : 18
HIGHER               : 22 46
IF                   : 15
INT                  : 4 24 29
LBRACKET             : 15 16 17 18 23 24 25 26 27 28 29 30 31 32
LOWER                : 21 45
LPAREN               : 13 14 15 16 17 18 23 24 25 26 27 28 29 30 31 32 35 48
MINUS                : 12 40
MINUSMINUS           : 10
NAME                 : 4 5 6 7 8 9 10 11 12 23 24 25 26 27 28 29 30 31 32 33 34 35 50
NUMBER               : 11 12 49
OR                   : 42
PLUS                 : 11 39
PLUSPLUS             : 9
PRINT                : 13
PRINTSTRING          : 14
RBRACKET             : 15 16 17 18 23 24 25 26 27 28 29 30 31 32
RETURN               : 24 25 26 27 29 30 31 32
RPAREN               : 13 14 15 16 17 18 23 24 25 26 27 28 29 30 31 32 35 48
STRING               : 5 27 32
TEXT                 : 5 14 51
THEN                 : 
TIMES                : 41
VOID                 : 23 28
WHILE                : 16 17
error                : 

Nonterminals, with rules where they appear

args                 : 35 38
compare              : 18
expression           : 4 7 8 13 15 16 17 20 20 21 21 22 22 24 25 26 27 29 30 31 32 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48
inst                 : 2 3 18 18
linst                : 1 2 15 16 17 18 23 24 25 26 27 28 29 30 31 32
params               : 28 29 30 31 32 33
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    $end            reduce using rule 1 (start -> linst .)
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 3

    (3) linst -> inst .

    INT             reduce using rule 3 (linst -> inst .)
    STRING          reduce using rule 3 (linst -> inst .)
    BOOL            reduce using rule 3 (linst -> inst .)
    FLOAT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    PRINTSTRING     reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    DO              reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    VOID            reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)
    RETURN          reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> INT . NAME EQUAL expression COLON
    (24) inst -> INT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> INT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 17


state 5

    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUSPLUS
    (10) inst -> NAME . MINUSMINUS
    (11) inst -> NAME . PLUS EQUAL NUMBER
    (12) inst -> NAME . MINUS EQUAL NUMBER
    (35) inst -> NAME . LPAREN args RPAREN COLON

    EQUAL           shift and go to state 18
    PLUSPLUS        shift and go to state 19
    MINUSMINUS      shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LPAREN          shift and go to state 23


state 6

    (5) inst -> STRING . NAME EQUAL TEXT COLON
    (27) inst -> STRING . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> STRING . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 24


state 7

    (6) inst -> BOOL . NAME EQUAL BOOLEAN COLON
    (26) inst -> BOOL . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> BOOL . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 25


state 8

    (7) inst -> FLOAT . NAME EQUAL expression COLON
    (25) inst -> FLOAT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> FLOAT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 26


state 9

    (13) inst -> PRINT . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 27


state 10

    (14) inst -> PRINTSTRING . LPAREN TEXT RPAREN COLON

    LPAREN          shift and go to state 28


state 11

    (15) inst -> IF . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 29


state 12

    (16) inst -> WHILE . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 30


state 13

    (17) inst -> DO . LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN

    LBRACKET        shift and go to state 31


state 14

    (18) inst -> FOR . LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 32


state 15

    (23) inst -> VOID . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> VOID . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 33


state 16

    (2) linst -> linst inst .

    INT             reduce using rule 2 (linst -> linst inst .)
    STRING          reduce using rule 2 (linst -> linst inst .)
    BOOL            reduce using rule 2 (linst -> linst inst .)
    FLOAT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    PRINTSTRING     reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    DO              reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    VOID            reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)
    RETURN          reduce using rule 2 (linst -> linst inst .)


state 17

    (4) inst -> INT NAME . EQUAL expression COLON
    (24) inst -> INT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> INT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 34
    LPAREN          shift and go to state 35


state 18

    (8) inst -> NAME EQUAL . expression COLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 37

state 19

    (9) inst -> NAME PLUSPLUS .

    INT             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    STRING          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    BOOL            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FLOAT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NAME            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINTSTRING     reduce using rule 9 (inst -> NAME PLUSPLUS .)
    IF              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    WHILE           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    DO              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FOR             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    VOID            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    $end            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RBRACKET        reduce using rule 9 (inst -> NAME PLUSPLUS .)
    LPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NUMBER          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    TEXT            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    COLON           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RETURN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)


state 20

    (10) inst -> NAME MINUSMINUS .

    INT             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    STRING          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    BOOL            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FLOAT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NAME            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINTSTRING     reduce using rule 10 (inst -> NAME MINUSMINUS .)
    IF              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    WHILE           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    DO              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FOR             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    VOID            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    $end            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RBRACKET        reduce using rule 10 (inst -> NAME MINUSMINUS .)
    LPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NUMBER          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    TEXT            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    COLON           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RETURN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)


state 21

    (11) inst -> NAME PLUS . EQUAL NUMBER

    EQUAL           shift and go to state 41


state 22

    (12) inst -> NAME MINUS . EQUAL NUMBER

    EQUAL           shift and go to state 42


state 23

    (35) inst -> NAME LPAREN . args RPAREN COLON
    (36) args -> .
    (37) args -> . expression
    (38) args -> . expression COLON args
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    RPAREN          reduce using rule 36 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    args                           shift and go to state 43
    expression                     shift and go to state 44

state 24

    (5) inst -> STRING NAME . EQUAL TEXT COLON
    (27) inst -> STRING NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> STRING NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 45
    LPAREN          shift and go to state 46


state 25

    (6) inst -> BOOL NAME . EQUAL BOOLEAN COLON
    (26) inst -> BOOL NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> BOOL NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 47
    LPAREN          shift and go to state 48


state 26

    (7) inst -> FLOAT NAME . EQUAL expression COLON
    (25) inst -> FLOAT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> FLOAT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 49
    LPAREN          shift and go to state 50


state 27

    (13) inst -> PRINT LPAREN . expression RPAREN COLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 51

state 28

    (14) inst -> PRINTSTRING LPAREN . TEXT RPAREN COLON

    TEXT            shift and go to state 52


state 29

    (15) inst -> IF LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 53

state 30

    (16) inst -> WHILE LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 54

state 31

    (17) inst -> DO LBRACKET . linst RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 55
    inst                           shift and go to state 3

state 32

    (18) inst -> FOR LPAREN . inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 56

state 33

    (23) inst -> VOID NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> VOID NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 57


state 34

    (4) inst -> INT NAME EQUAL . expression COLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 58

state 35

    (24) inst -> INT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> INT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    RPAREN          shift and go to state 60
    NAME            shift and go to state 59

    params                         shift and go to state 61

state 36

    (50) expression -> NAME .

    COLON           reduce using rule 50 (expression -> NAME .)
    PLUS            reduce using rule 50 (expression -> NAME .)
    MINUS           reduce using rule 50 (expression -> NAME .)
    TIMES           reduce using rule 50 (expression -> NAME .)
    OR              reduce using rule 50 (expression -> NAME .)
    AND             reduce using rule 50 (expression -> NAME .)
    EQUALS          reduce using rule 50 (expression -> NAME .)
    LOWER           reduce using rule 50 (expression -> NAME .)
    HIGHER          reduce using rule 50 (expression -> NAME .)
    DIVIDE          reduce using rule 50 (expression -> NAME .)
    RPAREN          reduce using rule 50 (expression -> NAME .)


state 37

    (8) inst -> NAME EQUAL expression . COLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 38

    (48) expression -> LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 72

state 39

    (49) expression -> NUMBER .

    COLON           reduce using rule 49 (expression -> NUMBER .)
    PLUS            reduce using rule 49 (expression -> NUMBER .)
    MINUS           reduce using rule 49 (expression -> NUMBER .)
    TIMES           reduce using rule 49 (expression -> NUMBER .)
    OR              reduce using rule 49 (expression -> NUMBER .)
    AND             reduce using rule 49 (expression -> NUMBER .)
    EQUALS          reduce using rule 49 (expression -> NUMBER .)
    LOWER           reduce using rule 49 (expression -> NUMBER .)
    HIGHER          reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    RPAREN          reduce using rule 49 (expression -> NUMBER .)


state 40

    (51) expression -> TEXT .

    COLON           reduce using rule 51 (expression -> TEXT .)
    PLUS            reduce using rule 51 (expression -> TEXT .)
    MINUS           reduce using rule 51 (expression -> TEXT .)
    TIMES           reduce using rule 51 (expression -> TEXT .)
    OR              reduce using rule 51 (expression -> TEXT .)
    AND             reduce using rule 51 (expression -> TEXT .)
    EQUALS          reduce using rule 51 (expression -> TEXT .)
    LOWER           reduce using rule 51 (expression -> TEXT .)
    HIGHER          reduce using rule 51 (expression -> TEXT .)
    DIVIDE          reduce using rule 51 (expression -> TEXT .)
    RPAREN          reduce using rule 51 (expression -> TEXT .)


state 41

    (11) inst -> NAME PLUS EQUAL . NUMBER

    NUMBER          shift and go to state 73


state 42

    (12) inst -> NAME MINUS EQUAL . NUMBER

    NUMBER          shift and go to state 74


state 43

    (35) inst -> NAME LPAREN args . RPAREN COLON

    RPAREN          shift and go to state 75


state 44

    (37) args -> expression .
    (38) args -> expression . COLON args
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 37 (args -> expression .)
    COLON           shift and go to state 76
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 45

    (5) inst -> STRING NAME EQUAL . TEXT COLON

    TEXT            shift and go to state 77


state 46

    (27) inst -> STRING NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> STRING NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    RPAREN          shift and go to state 78
    NAME            shift and go to state 59

    params                         shift and go to state 79

state 47

    (6) inst -> BOOL NAME EQUAL . BOOLEAN COLON

    BOOLEAN         shift and go to state 80


state 48

    (26) inst -> BOOL NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> BOOL NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    RPAREN          shift and go to state 81
    NAME            shift and go to state 59

    params                         shift and go to state 82

state 49

    (7) inst -> FLOAT NAME EQUAL . expression COLON
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 83

state 50

    (25) inst -> FLOAT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> FLOAT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    RPAREN          shift and go to state 84
    NAME            shift and go to state 59

    params                         shift and go to state 85

state 51

    (13) inst -> PRINT LPAREN expression . RPAREN COLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 52

    (14) inst -> PRINTSTRING LPAREN TEXT . RPAREN COLON

    RPAREN          shift and go to state 87


state 53

    (15) inst -> IF LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 54

    (16) inst -> WHILE LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 89
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 55

    (17) inst -> DO LBRACKET linst . RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 90
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 56

    (18) inst -> FOR LPAREN inst . compare COLON inst RPAREN LBRACKET linst RBRACKET
    (19) compare -> .
    (20) compare -> . expression EQUALS expression
    (21) compare -> . expression LOWER expression
    (22) compare -> . expression HIGHER expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    COLON           reduce using rule 19 (compare -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    compare                        shift and go to state 91
    expression                     shift and go to state 92

state 57

    (23) inst -> VOID NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (28) inst -> VOID NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    RPAREN          shift and go to state 93
    NAME            shift and go to state 59

    params                         shift and go to state 94

state 58

    (4) inst -> INT NAME EQUAL expression . COLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 95
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 59

    (33) params -> NAME . COLON params
    (34) params -> NAME .

    COLON           shift and go to state 96
    RPAREN          reduce using rule 34 (params -> NAME .)


state 60

    (24) inst -> INT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 97


state 61

    (29) inst -> INT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 98


state 62

    (8) inst -> NAME EQUAL expression COLON .

    INT             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    STRING          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    BOOL            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NAME            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    IF              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    WHILE           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    DO              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FOR             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    VOID            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    $end            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    TEXT            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    COLON           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RETURN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)


state 63

    (39) expression -> expression PLUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 99

state 64

    (40) expression -> expression MINUS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 100

state 65

    (41) expression -> expression TIMES . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 101

state 66

    (42) expression -> expression OR . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 102

state 67

    (43) expression -> expression AND . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 103

state 68

    (44) expression -> expression EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 104

state 69

    (45) expression -> expression LOWER . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 105

state 70

    (46) expression -> expression HIGHER . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 106

state 71

    (47) expression -> expression DIVIDE . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 107

state 72

    (48) expression -> LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 73

    (11) inst -> NAME PLUS EQUAL NUMBER .

    INT             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    STRING          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    BOOL            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FLOAT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NAME            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    IF              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    WHILE           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    DO              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FOR             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    VOID            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    $end            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    LPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NUMBER          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    TEXT            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    COLON           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RETURN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)


state 74

    (12) inst -> NAME MINUS EQUAL NUMBER .

    INT             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    STRING          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    BOOL            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FLOAT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NAME            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    IF              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    WHILE           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    DO              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FOR             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    VOID            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    $end            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    LPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NUMBER          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    TEXT            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    COLON           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RETURN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)


state 75

    (35) inst -> NAME LPAREN args RPAREN . COLON

    COLON           shift and go to state 109


state 76

    (38) args -> expression COLON . args
    (36) args -> .
    (37) args -> . expression
    (38) args -> . expression COLON args
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    RPAREN          reduce using rule 36 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 44
    args                           shift and go to state 110

state 77

    (5) inst -> STRING NAME EQUAL TEXT . COLON

    COLON           shift and go to state 111


state 78

    (27) inst -> STRING NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 112


state 79

    (32) inst -> STRING NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 113


state 80

    (6) inst -> BOOL NAME EQUAL BOOLEAN . COLON

    COLON           shift and go to state 114


state 81

    (26) inst -> BOOL NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 115


state 82

    (31) inst -> BOOL NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 116


state 83

    (7) inst -> FLOAT NAME EQUAL expression . COLON
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 117
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 84

    (25) inst -> FLOAT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 118


state 85

    (30) inst -> FLOAT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 119


state 86

    (13) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 120


state 87

    (14) inst -> PRINTSTRING LPAREN TEXT RPAREN . COLON

    COLON           shift and go to state 121


state 88

    (15) inst -> IF LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 122


state 89

    (16) inst -> WHILE LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 123


state 90

    (17) inst -> DO LBRACKET linst RBRACKET . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 124


state 91

    (18) inst -> FOR LPAREN inst compare . COLON inst RPAREN LBRACKET linst RBRACKET

    COLON           shift and go to state 125


state 92

    (20) compare -> expression . EQUALS expression
    (21) compare -> expression . LOWER expression
    (22) compare -> expression . HIGHER expression
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    EQUALS          shift and go to state 126
    LOWER           shift and go to state 127
    HIGHER          shift and go to state 128
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    DIVIDE          shift and go to state 71


state 93

    (23) inst -> VOID NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 129


state 94

    (28) inst -> VOID NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 130


state 95

    (4) inst -> INT NAME EQUAL expression COLON .

    INT             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    STRING          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NAME            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    IF              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    DO              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FOR             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    VOID            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    $end            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    COLON           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)


state 96

    (33) params -> NAME COLON . params
    (33) params -> . NAME COLON params
    (34) params -> . NAME

    NAME            shift and go to state 59

    params                         shift and go to state 131

state 97

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 132
    inst                           shift and go to state 3

state 98

    (29) inst -> INT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 133


state 99

    (39) expression -> expression PLUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 39 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 39 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression PLUS expression .) ]


state 100

    (40) expression -> expression MINUS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 40 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 40 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression MINUS expression .) ]


state 101

    (41) expression -> expression TIMES expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 41 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 41 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 41 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression TIMES expression .) ]


state 102

    (42) expression -> expression OR expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 42 (expression -> expression OR expression .)
    RPAREN          reduce using rule 42 (expression -> expression OR expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression OR expression .) ]


state 103

    (43) expression -> expression AND expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 43 (expression -> expression AND expression .)
    RPAREN          reduce using rule 43 (expression -> expression AND expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression AND expression .) ]


state 104

    (44) expression -> expression EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 44 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 44 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]


state 105

    (45) expression -> expression LOWER expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 45 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 45 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression LOWER expression .) ]


state 106

    (46) expression -> expression HIGHER expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 46 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 46 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]


state 107

    (47) expression -> expression DIVIDE expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 47 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 47 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! PLUS            [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression DIVIDE expression .) ]


state 108

    (48) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 109

    (35) inst -> NAME LPAREN args RPAREN COLON .

    INT             reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    STRING          reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    BOOL            reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    FLOAT           reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    NAME            reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINT           reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINTSTRING     reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    IF              reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    WHILE           reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    DO              reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    FOR             reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    VOID            reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    $end            reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    RBRACKET        reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    LPAREN          reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    NUMBER          reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    TEXT            reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    COLON           reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    RETURN          reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)
    RPAREN          reduce using rule 35 (inst -> NAME LPAREN args RPAREN COLON .)


state 110

    (38) args -> expression COLON args .

    RPAREN          reduce using rule 38 (args -> expression COLON args .)


state 111

    (5) inst -> STRING NAME EQUAL TEXT COLON .

    INT             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    STRING          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    BOOL            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FLOAT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NAME            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINTSTRING     reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    IF              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    WHILE           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    DO              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FOR             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    VOID            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    $end            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RBRACKET        reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    LPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NUMBER          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    TEXT            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    COLON           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RETURN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)


state 112

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 134
    inst                           shift and go to state 3

state 113

    (32) inst -> STRING NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 135


state 114

    (6) inst -> BOOL NAME EQUAL BOOLEAN COLON .

    INT             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    STRING          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    BOOL            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FLOAT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NAME            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINTSTRING     reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    IF              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    WHILE           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    DO              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FOR             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    VOID            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    $end            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RBRACKET        reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    LPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NUMBER          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    TEXT            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    COLON           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RETURN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)


state 115

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 136
    inst                           shift and go to state 3

state 116

    (31) inst -> BOOL NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 137


state 117

    (7) inst -> FLOAT NAME EQUAL expression COLON .

    INT             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    STRING          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NAME            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    IF              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    DO              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FOR             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    VOID            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    $end            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    COLON           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)


state 118

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 138
    inst                           shift and go to state 3

state 119

    (30) inst -> FLOAT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 139


state 120

    (13) inst -> PRINT LPAREN expression RPAREN COLON .

    INT             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    STRING          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    BOOL            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FLOAT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINTSTRING     reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    DO              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    VOID            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    TEXT            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    COLON           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RETURN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 121

    (14) inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .

    INT             reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    STRING          reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    BOOL            reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FLOAT           reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NAME            reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINT           reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINTSTRING     reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    IF              reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    WHILE           reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    DO              reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FOR             reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    VOID            reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    $end            reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RBRACKET        reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    LPAREN          reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NUMBER          reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    TEXT            reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    COLON           reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RETURN          reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RPAREN          reduce using rule 14 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)


state 122

    (15) inst -> IF LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 140
    inst                           shift and go to state 3

state 123

    (16) inst -> WHILE LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 141
    inst                           shift and go to state 3

state 124

    (17) inst -> DO LBRACKET linst RBRACKET WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 142


state 125

    (18) inst -> FOR LPAREN inst compare COLON . inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 143

state 126

    (20) compare -> expression EQUALS . expression
    (44) expression -> expression EQUALS . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 144

state 127

    (21) compare -> expression LOWER . expression
    (45) expression -> expression LOWER . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 145

state 128

    (22) compare -> expression HIGHER . expression
    (46) expression -> expression HIGHER . expression
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 146

state 129

    (23) inst -> VOID NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 147
    inst                           shift and go to state 3

state 130

    (28) inst -> VOID NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 148


state 131

    (33) params -> NAME COLON params .

    RPAREN          reduce using rule 33 (params -> NAME COLON params .)


state 132

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 149
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 133

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 150
    inst                           shift and go to state 3

state 134

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 151
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 135

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 152
    inst                           shift and go to state 3

state 136

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 153
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 137

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 154
    inst                           shift and go to state 3

state 138

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 155
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 139

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 156
    inst                           shift and go to state 3

state 140

    (15) inst -> IF LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 157
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 141

    (16) inst -> WHILE LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 158
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 142

    (17) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN . expression RPAREN
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 159

state 143

    (18) inst -> FOR LPAREN inst compare COLON inst . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 160


state 144

    (20) compare -> expression EQUALS expression .
    (44) expression -> expression EQUALS expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 20 (compare -> expression EQUALS expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! EQUALS          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]


state 145

    (21) compare -> expression LOWER expression .
    (45) expression -> expression LOWER expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 21 (compare -> expression LOWER expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! EQUALS          [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression LOWER expression .) ]


state 146

    (22) compare -> expression HIGHER expression .
    (46) expression -> expression HIGHER expression .
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 22 (compare -> expression HIGHER expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71

  ! EQUALS          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression HIGHER expression .) ]


state 147

    (23) inst -> VOID NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 161
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 148

    (28) inst -> VOID NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 162
    inst                           shift and go to state 3

state 149

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 163

state 150

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 164
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 151

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 165

state 152

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 166
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 153

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 167

state 154

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 168
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 155

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 169

state 156

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 170
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 157

    (15) inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 15 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 158

    (16) inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 16 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 159

    (17) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression . RPAREN
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 171
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 160

    (18) inst -> FOR LPAREN inst compare COLON inst RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 172


state 161

    (23) inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 23 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 162

    (28) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 173
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 163

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 174
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 164

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 175

state 165

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 176
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 166

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 177

state 167

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 178
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 168

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 179

state 169

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 180
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 170

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (39) expression -> . expression PLUS expression
    (40) expression -> . expression MINUS expression
    (41) expression -> . expression TIMES expression
    (42) expression -> . expression OR expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression LOWER expression
    (46) expression -> . expression HIGHER expression
    (47) expression -> . expression DIVIDE expression
    (48) expression -> . LPAREN expression RPAREN
    (49) expression -> . NUMBER
    (50) expression -> . NAME
    (51) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 181

state 171

    (17) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .

    INT             reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    BOOL            reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FLOAT           reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NAME            reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINT           reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINTSTRING     reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    VOID            reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    $end            reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NUMBER          reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    TEXT            reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    COLON           reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)


state 172

    (18) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 3
    linst                          shift and go to state 182

state 173

    (28) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 28 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 174

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 183


state 175

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 184
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 176

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 185


state 177

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 186
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 178

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 187


state 179

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 188
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 180

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 189


state 181

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (39) expression -> expression . PLUS expression
    (40) expression -> expression . MINUS expression
    (41) expression -> expression . TIMES expression
    (42) expression -> expression . OR expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . LOWER expression
    (46) expression -> expression . HIGHER expression
    (47) expression -> expression . DIVIDE expression

    COLON           shift and go to state 190
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    OR              shift and go to state 66
    AND             shift and go to state 67
    EQUALS          shift and go to state 68
    LOWER           shift and go to state 69
    HIGHER          shift and go to state 70
    DIVIDE          shift and go to state 71


state 182

    (18) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (15) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (16) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (18) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (23) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (24) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (25) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (29) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 191
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 183

    (24) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 24 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 184

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 192


state 185

    (27) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 27 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 186

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 193


state 187

    (26) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 26 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 188

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 194


state 189

    (25) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 25 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 190

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 195


state 191

    (18) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 18 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)


state 192

    (29) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 29 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 193

    (32) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 32 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 194

    (31) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 31 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 195

    (30) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 30 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 99 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 100 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 101 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 102 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 103 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 104 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 105 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 106 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 107 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 144 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 145 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 145 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 145 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 146 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 146 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 146 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 146 resolved as shift
