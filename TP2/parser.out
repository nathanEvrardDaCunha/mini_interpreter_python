Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLEQUOTE
    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> INT NAME EQUAL expression COLON
Rule 5     inst -> STRING NAME EQUAL TEXT COLON
Rule 6     inst -> BOOL NAME EQUAL BOOLEAN COLON
Rule 7     inst -> FLOAT NAME EQUAL expression COLON
Rule 8     inst -> NAME EQUAL expression COLON
Rule 9     inst -> NAME PLUSPLUS
Rule 10    inst -> NAME MINUSMINUS
Rule 11    inst -> NAME PLUS EQUAL NUMBER
Rule 12    inst -> NAME MINUS EQUAL NUMBER
Rule 13    inst -> PRINT LPAREN expression RPAREN COLON
Rule 14    inst -> PRINT LPAREN inst RPAREN COLON
Rule 15    inst -> PRINTSTRING LPAREN TEXT RPAREN COLON
Rule 16    inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 17    inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 18    inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
Rule 19    inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
Rule 20    compare -> <empty>
Rule 21    compare -> expression EQUALS expression
Rule 22    compare -> expression LOWER expression
Rule 23    compare -> expression HIGHER expression
Rule 24    inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 25    inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 26    inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 27    inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 28    inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 29    inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 30    inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 31    inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 32    inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 33    inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
Rule 34    inst -> INT NAME EQUAL inst
Rule 35    params -> NAME COLON params
Rule 36    params -> NAME
Rule 37    inst -> NAME LPAREN args RPAREN COLON
Rule 38    args -> <empty>
Rule 39    args -> expression
Rule 40    args -> expression COLON args
Rule 41    expression -> expression PLUS expression
Rule 42    expression -> expression MINUS expression
Rule 43    expression -> expression TIMES expression
Rule 44    expression -> expression OR expression
Rule 45    expression -> expression AND expression
Rule 46    expression -> expression EQUALS expression
Rule 47    expression -> expression LOWER expression
Rule 48    expression -> expression HIGHER expression
Rule 49    expression -> expression DIVIDE expression
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> NUMBER
Rule 52    expression -> NAME
Rule 53    expression -> TEXT

Terminals, with rules where they appear

AND                  : 45
BOOL                 : 6 27 32
BOOLEAN              : 6
COLON                : 4 5 6 7 8 13 14 15 19 25 26 27 28 30 31 32 33 35 37 40
DIVIDE               : 49
DO                   : 18
DOUBLEQUOTE          : 
EQUAL                : 4 5 6 7 8 11 12 34
EQUALS               : 21 46
FLOAT                : 7 26 31
FOR                  : 19
HIGHER               : 23 48
IF                   : 16
INT                  : 4 25 30 34
LBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33
LOWER                : 22 47
LPAREN               : 13 14 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 37 50
MINUS                : 12 42
MINUSMINUS           : 10
NAME                 : 4 5 6 7 8 9 10 11 12 24 25 26 27 28 29 30 31 32 33 34 35 36 37 52
NUMBER               : 11 12 51
OR                   : 44
PLUS                 : 11 41
PLUSPLUS             : 9
PRINT                : 13 14
PRINTSTRING          : 15
RBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33
RETURN               : 25 26 27 28 30 31 32 33
RPAREN               : 13 14 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 37 50
STRING               : 5 28 33
TEXT                 : 5 15 53
THEN                 : 
TIMES                : 43
VOID                 : 24 29
WHILE                : 17 18
error                : 

Nonterminals, with rules where they appear

args                 : 37 40
compare              : 19
expression           : 4 7 8 13 16 17 18 21 21 22 22 23 23 25 26 27 28 30 31 32 33 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50
inst                 : 2 3 14 19 19 34
linst                : 1 2 16 17 18 19 24 25 26 27 28 29 30 31 32 33
params               : 29 30 31 32 33 35
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    $end            reduce using rule 1 (start -> linst .)
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 3

    (3) linst -> inst .

    INT             reduce using rule 3 (linst -> inst .)
    STRING          reduce using rule 3 (linst -> inst .)
    BOOL            reduce using rule 3 (linst -> inst .)
    FLOAT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    PRINTSTRING     reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    DO              reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    VOID            reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)
    RETURN          reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> INT . NAME EQUAL expression COLON
    (25) inst -> INT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> INT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> INT . NAME EQUAL inst

    NAME            shift and go to state 17


state 5

    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUSPLUS
    (10) inst -> NAME . MINUSMINUS
    (11) inst -> NAME . PLUS EQUAL NUMBER
    (12) inst -> NAME . MINUS EQUAL NUMBER
    (37) inst -> NAME . LPAREN args RPAREN COLON

    EQUAL           shift and go to state 18
    PLUSPLUS        shift and go to state 19
    MINUSMINUS      shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LPAREN          shift and go to state 23


state 6

    (5) inst -> STRING . NAME EQUAL TEXT COLON
    (28) inst -> STRING . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> STRING . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 24


state 7

    (6) inst -> BOOL . NAME EQUAL BOOLEAN COLON
    (27) inst -> BOOL . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> BOOL . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 25


state 8

    (7) inst -> FLOAT . NAME EQUAL expression COLON
    (26) inst -> FLOAT . NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> FLOAT . NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    NAME            shift and go to state 26


state 9

    (13) inst -> PRINT . LPAREN expression RPAREN COLON
    (14) inst -> PRINT . LPAREN inst RPAREN COLON

    LPAREN          shift and go to state 27


state 10

    (15) inst -> PRINTSTRING . LPAREN TEXT RPAREN COLON

    LPAREN          shift and go to state 28


state 11

    (16) inst -> IF . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 29


state 12

    (17) inst -> WHILE . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 30


state 13

    (18) inst -> DO . LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN

    LBRACKET        shift and go to state 31


state 14

    (19) inst -> FOR . LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 32


state 15

    (24) inst -> VOID . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 33


state 16

    (2) linst -> linst inst .

    INT             reduce using rule 2 (linst -> linst inst .)
    STRING          reduce using rule 2 (linst -> linst inst .)
    BOOL            reduce using rule 2 (linst -> linst inst .)
    FLOAT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    PRINTSTRING     reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    DO              reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    VOID            reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)
    RETURN          reduce using rule 2 (linst -> linst inst .)


state 17

    (4) inst -> INT NAME . EQUAL expression COLON
    (25) inst -> INT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> INT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> INT NAME . EQUAL inst

    EQUAL           shift and go to state 34
    LPAREN          shift and go to state 35


state 18

    (8) inst -> NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 37

state 19

    (9) inst -> NAME PLUSPLUS .

    INT             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    STRING          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    BOOL            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FLOAT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NAME            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINT           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    PRINTSTRING     reduce using rule 9 (inst -> NAME PLUSPLUS .)
    IF              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    WHILE           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    DO              reduce using rule 9 (inst -> NAME PLUSPLUS .)
    FOR             reduce using rule 9 (inst -> NAME PLUSPLUS .)
    VOID            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    $end            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RBRACKET        reduce using rule 9 (inst -> NAME PLUSPLUS .)
    LPAREN          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    NUMBER          reduce using rule 9 (inst -> NAME PLUSPLUS .)
    TEXT            reduce using rule 9 (inst -> NAME PLUSPLUS .)
    COLON           reduce using rule 9 (inst -> NAME PLUSPLUS .)
    RETURN          reduce using rule 9 (inst -> NAME PLUSPLUS .)


state 20

    (10) inst -> NAME MINUSMINUS .

    INT             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    STRING          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    BOOL            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FLOAT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NAME            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINT           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    PRINTSTRING     reduce using rule 10 (inst -> NAME MINUSMINUS .)
    IF              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    WHILE           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    DO              reduce using rule 10 (inst -> NAME MINUSMINUS .)
    FOR             reduce using rule 10 (inst -> NAME MINUSMINUS .)
    VOID            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    $end            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RBRACKET        reduce using rule 10 (inst -> NAME MINUSMINUS .)
    LPAREN          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    NUMBER          reduce using rule 10 (inst -> NAME MINUSMINUS .)
    TEXT            reduce using rule 10 (inst -> NAME MINUSMINUS .)
    COLON           reduce using rule 10 (inst -> NAME MINUSMINUS .)
    RETURN          reduce using rule 10 (inst -> NAME MINUSMINUS .)


state 21

    (11) inst -> NAME PLUS . EQUAL NUMBER

    EQUAL           shift and go to state 41


state 22

    (12) inst -> NAME MINUS . EQUAL NUMBER

    EQUAL           shift and go to state 42


state 23

    (37) inst -> NAME LPAREN . args RPAREN COLON
    (38) args -> .
    (39) args -> . expression
    (40) args -> . expression COLON args
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    RPAREN          reduce using rule 38 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    args                           shift and go to state 43
    expression                     shift and go to state 44

state 24

    (5) inst -> STRING NAME . EQUAL TEXT COLON
    (28) inst -> STRING NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> STRING NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 45
    LPAREN          shift and go to state 46


state 25

    (6) inst -> BOOL NAME . EQUAL BOOLEAN COLON
    (27) inst -> BOOL NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> BOOL NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 47
    LPAREN          shift and go to state 48


state 26

    (7) inst -> FLOAT NAME . EQUAL expression COLON
    (26) inst -> FLOAT NAME . LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> FLOAT NAME . LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    EQUAL           shift and go to state 49
    LPAREN          shift and go to state 50


state 27

    (13) inst -> PRINT LPAREN . expression RPAREN COLON
    (14) inst -> PRINT LPAREN . inst RPAREN COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 53
    TEXT            shift and go to state 40
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    expression                     shift and go to state 51
    inst                           shift and go to state 52

state 28

    (15) inst -> PRINTSTRING LPAREN . TEXT RPAREN COLON

    TEXT            shift and go to state 54


state 29

    (16) inst -> IF LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 55

state 30

    (17) inst -> WHILE LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 56

state 31

    (18) inst -> DO LBRACKET . linst RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 57
    inst                           shift and go to state 3

state 32

    (19) inst -> FOR LPAREN . inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 58

state 33

    (24) inst -> VOID NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 59


state 34

    (4) inst -> INT NAME EQUAL . expression COLON
    (34) inst -> INT NAME EQUAL . inst
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 53
    TEXT            shift and go to state 40
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    expression                     shift and go to state 60
    inst                           shift and go to state 61

state 35

    (25) inst -> INT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (30) inst -> INT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    RPAREN          shift and go to state 63
    NAME            shift and go to state 62

    params                         shift and go to state 64

state 36

    (52) expression -> NAME .

    COLON           reduce using rule 52 (expression -> NAME .)
    PLUS            reduce using rule 52 (expression -> NAME .)
    MINUS           reduce using rule 52 (expression -> NAME .)
    TIMES           reduce using rule 52 (expression -> NAME .)
    OR              reduce using rule 52 (expression -> NAME .)
    AND             reduce using rule 52 (expression -> NAME .)
    EQUALS          reduce using rule 52 (expression -> NAME .)
    LOWER           reduce using rule 52 (expression -> NAME .)
    HIGHER          reduce using rule 52 (expression -> NAME .)
    DIVIDE          reduce using rule 52 (expression -> NAME .)
    RPAREN          reduce using rule 52 (expression -> NAME .)


state 37

    (8) inst -> NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 65
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 38

    (50) expression -> LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 75

state 39

    (51) expression -> NUMBER .

    COLON           reduce using rule 51 (expression -> NUMBER .)
    PLUS            reduce using rule 51 (expression -> NUMBER .)
    MINUS           reduce using rule 51 (expression -> NUMBER .)
    TIMES           reduce using rule 51 (expression -> NUMBER .)
    OR              reduce using rule 51 (expression -> NUMBER .)
    AND             reduce using rule 51 (expression -> NUMBER .)
    EQUALS          reduce using rule 51 (expression -> NUMBER .)
    LOWER           reduce using rule 51 (expression -> NUMBER .)
    HIGHER          reduce using rule 51 (expression -> NUMBER .)
    DIVIDE          reduce using rule 51 (expression -> NUMBER .)
    RPAREN          reduce using rule 51 (expression -> NUMBER .)


state 40

    (53) expression -> TEXT .

    COLON           reduce using rule 53 (expression -> TEXT .)
    PLUS            reduce using rule 53 (expression -> TEXT .)
    MINUS           reduce using rule 53 (expression -> TEXT .)
    TIMES           reduce using rule 53 (expression -> TEXT .)
    OR              reduce using rule 53 (expression -> TEXT .)
    AND             reduce using rule 53 (expression -> TEXT .)
    EQUALS          reduce using rule 53 (expression -> TEXT .)
    LOWER           reduce using rule 53 (expression -> TEXT .)
    HIGHER          reduce using rule 53 (expression -> TEXT .)
    DIVIDE          reduce using rule 53 (expression -> TEXT .)
    RPAREN          reduce using rule 53 (expression -> TEXT .)


state 41

    (11) inst -> NAME PLUS EQUAL . NUMBER

    NUMBER          shift and go to state 76


state 42

    (12) inst -> NAME MINUS EQUAL . NUMBER

    NUMBER          shift and go to state 77


state 43

    (37) inst -> NAME LPAREN args . RPAREN COLON

    RPAREN          shift and go to state 78


state 44

    (39) args -> expression .
    (40) args -> expression . COLON args
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 39 (args -> expression .)
    COLON           shift and go to state 79
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 45

    (5) inst -> STRING NAME EQUAL . TEXT COLON

    TEXT            shift and go to state 80


state 46

    (28) inst -> STRING NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> STRING NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    RPAREN          shift and go to state 81
    NAME            shift and go to state 62

    params                         shift and go to state 82

state 47

    (6) inst -> BOOL NAME EQUAL . BOOLEAN COLON

    BOOLEAN         shift and go to state 83


state 48

    (27) inst -> BOOL NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> BOOL NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    RPAREN          shift and go to state 84
    NAME            shift and go to state 62

    params                         shift and go to state 85

state 49

    (7) inst -> FLOAT NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 86

state 50

    (26) inst -> FLOAT NAME LPAREN . RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> FLOAT NAME LPAREN . params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    RPAREN          shift and go to state 87
    NAME            shift and go to state 62

    params                         shift and go to state 88

state 51

    (13) inst -> PRINT LPAREN expression . RPAREN COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 89
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 52

    (14) inst -> PRINT LPAREN inst . RPAREN COLON

    RPAREN          shift and go to state 90


state 53

    (52) expression -> NAME .
    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUSPLUS
    (10) inst -> NAME . MINUSMINUS
    (11) inst -> NAME . PLUS EQUAL NUMBER
    (12) inst -> NAME . MINUS EQUAL NUMBER
    (37) inst -> NAME . LPAREN args RPAREN COLON

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RPAREN          reduce using rule 52 (expression -> NAME .)
    TIMES           reduce using rule 52 (expression -> NAME .)
    OR              reduce using rule 52 (expression -> NAME .)
    AND             reduce using rule 52 (expression -> NAME .)
    EQUALS          reduce using rule 52 (expression -> NAME .)
    LOWER           reduce using rule 52 (expression -> NAME .)
    HIGHER          reduce using rule 52 (expression -> NAME .)
    DIVIDE          reduce using rule 52 (expression -> NAME .)
    COLON           reduce using rule 52 (expression -> NAME .)
    EQUAL           shift and go to state 18
    PLUSPLUS        shift and go to state 19
    MINUSMINUS      shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    LPAREN          shift and go to state 23

  ! PLUS            [ reduce using rule 52 (expression -> NAME .) ]
  ! MINUS           [ reduce using rule 52 (expression -> NAME .) ]


state 54

    (15) inst -> PRINTSTRING LPAREN TEXT . RPAREN COLON

    RPAREN          shift and go to state 91


state 55

    (16) inst -> IF LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 56

    (17) inst -> WHILE LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 93
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 57

    (18) inst -> DO LBRACKET linst . RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 94
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 58

    (19) inst -> FOR LPAREN inst . compare COLON inst RPAREN LBRACKET linst RBRACKET
    (20) compare -> .
    (21) compare -> . expression EQUALS expression
    (22) compare -> . expression LOWER expression
    (23) compare -> . expression HIGHER expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    COLON           reduce using rule 20 (compare -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    compare                        shift and go to state 95
    expression                     shift and go to state 96

state 59

    (24) inst -> VOID NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    RPAREN          shift and go to state 97
    NAME            shift and go to state 62

    params                         shift and go to state 98

state 60

    (4) inst -> INT NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 99
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 61

    (34) inst -> INT NAME EQUAL inst .

    INT             reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    STRING          reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    BOOL            reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    FLOAT           reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    NAME            reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    PRINT           reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    PRINTSTRING     reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    IF              reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    WHILE           reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    DO              reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    FOR             reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    VOID            reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    $end            reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    RPAREN          reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    RBRACKET        reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    LPAREN          reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    NUMBER          reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    TEXT            reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    COLON           reduce using rule 34 (inst -> INT NAME EQUAL inst .)
    RETURN          reduce using rule 34 (inst -> INT NAME EQUAL inst .)


state 62

    (35) params -> NAME . COLON params
    (36) params -> NAME .

    COLON           shift and go to state 100
    RPAREN          reduce using rule 36 (params -> NAME .)


state 63

    (25) inst -> INT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 101


state 64

    (30) inst -> INT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 102


state 65

    (8) inst -> NAME EQUAL expression COLON .

    INT             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    STRING          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    BOOL            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NAME            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    IF              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    WHILE           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    DO              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FOR             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    VOID            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    $end            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    TEXT            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    COLON           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RETURN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)


state 66

    (41) expression -> expression PLUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 103

state 67

    (42) expression -> expression MINUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 104

state 68

    (43) expression -> expression TIMES . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 105

state 69

    (44) expression -> expression OR . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 106

state 70

    (45) expression -> expression AND . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 107

state 71

    (46) expression -> expression EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 108

state 72

    (47) expression -> expression LOWER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 109

state 73

    (48) expression -> expression HIGHER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 110

state 74

    (49) expression -> expression DIVIDE . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 111

state 75

    (50) expression -> LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 112
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 76

    (11) inst -> NAME PLUS EQUAL NUMBER .

    INT             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    STRING          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    BOOL            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FLOAT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NAME            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINT           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    IF              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    WHILE           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    DO              reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    FOR             reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    VOID            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    $end            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    LPAREN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    NUMBER          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    TEXT            reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    COLON           reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)
    RETURN          reduce using rule 11 (inst -> NAME PLUS EQUAL NUMBER .)


state 77

    (12) inst -> NAME MINUS EQUAL NUMBER .

    INT             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    STRING          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    BOOL            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FLOAT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NAME            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINT           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    IF              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    WHILE           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    DO              reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    FOR             reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    VOID            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    $end            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    LPAREN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    NUMBER          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    TEXT            reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    COLON           reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)
    RETURN          reduce using rule 12 (inst -> NAME MINUS EQUAL NUMBER .)


state 78

    (37) inst -> NAME LPAREN args RPAREN . COLON

    COLON           shift and go to state 113


state 79

    (40) args -> expression COLON . args
    (38) args -> .
    (39) args -> . expression
    (40) args -> . expression COLON args
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    RPAREN          reduce using rule 38 (args -> .)
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 44
    args                           shift and go to state 114

state 80

    (5) inst -> STRING NAME EQUAL TEXT . COLON

    COLON           shift and go to state 115


state 81

    (28) inst -> STRING NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 116


state 82

    (33) inst -> STRING NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 117


state 83

    (6) inst -> BOOL NAME EQUAL BOOLEAN . COLON

    COLON           shift and go to state 118


state 84

    (27) inst -> BOOL NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 119


state 85

    (32) inst -> BOOL NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 120


state 86

    (7) inst -> FLOAT NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 121
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 87

    (26) inst -> FLOAT NAME LPAREN RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 122


state 88

    (31) inst -> FLOAT NAME LPAREN params . RPAREN LBRACKET linst RETURN expression COLON RBRACKET

    RPAREN          shift and go to state 123


state 89

    (13) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 124


state 90

    (14) inst -> PRINT LPAREN inst RPAREN . COLON

    COLON           shift and go to state 125


state 91

    (15) inst -> PRINTSTRING LPAREN TEXT RPAREN . COLON

    COLON           shift and go to state 126


state 92

    (16) inst -> IF LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 127


state 93

    (17) inst -> WHILE LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 128


state 94

    (18) inst -> DO LBRACKET linst RBRACKET . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 129


state 95

    (19) inst -> FOR LPAREN inst compare . COLON inst RPAREN LBRACKET linst RBRACKET

    COLON           shift and go to state 130


state 96

    (21) compare -> expression . EQUALS expression
    (22) compare -> expression . LOWER expression
    (23) compare -> expression . HIGHER expression
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    EQUALS          shift and go to state 131
    LOWER           shift and go to state 132
    HIGHER          shift and go to state 133
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    DIVIDE          shift and go to state 74


state 97

    (24) inst -> VOID NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 134


state 98

    (29) inst -> VOID NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 135


state 99

    (4) inst -> INT NAME EQUAL expression COLON .

    INT             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    STRING          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NAME            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    IF              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    DO              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FOR             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    VOID            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    $end            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    COLON           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)


state 100

    (35) params -> NAME COLON . params
    (35) params -> . NAME COLON params
    (36) params -> . NAME

    NAME            shift and go to state 62

    params                         shift and go to state 136

state 101

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 137
    inst                           shift and go to state 3

state 102

    (30) inst -> INT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 138


state 103

    (41) expression -> expression PLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 41 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression PLUS expression .) ]


state 104

    (42) expression -> expression MINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 42 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression MINUS expression .) ]


state 105

    (43) expression -> expression TIMES expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 43 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 43 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression TIMES expression .) ]


state 106

    (44) expression -> expression OR expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 44 (expression -> expression OR expression .)
    RPAREN          reduce using rule 44 (expression -> expression OR expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression OR expression .) ]


state 107

    (45) expression -> expression AND expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 45 (expression -> expression AND expression .)
    RPAREN          reduce using rule 45 (expression -> expression AND expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression AND expression .) ]


state 108

    (46) expression -> expression EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 46 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]


state 109

    (47) expression -> expression LOWER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 47 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 47 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LOWER expression .) ]


state 110

    (48) expression -> expression HIGHER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 48 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 48 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]


state 111

    (49) expression -> expression DIVIDE expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 49 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! PLUS            [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]


state 112

    (50) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 113

    (37) inst -> NAME LPAREN args RPAREN COLON .

    INT             reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    STRING          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    BOOL            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    FLOAT           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    NAME            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINT           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINTSTRING     reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    IF              reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    WHILE           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    DO              reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    FOR             reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    VOID            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    $end            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    RPAREN          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    RBRACKET        reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    LPAREN          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    NUMBER          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    TEXT            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    COLON           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    RETURN          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)


state 114

    (40) args -> expression COLON args .

    RPAREN          reduce using rule 40 (args -> expression COLON args .)


state 115

    (5) inst -> STRING NAME EQUAL TEXT COLON .

    INT             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    STRING          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    BOOL            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FLOAT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NAME            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINT           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    PRINTSTRING     reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    IF              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    WHILE           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    DO              reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    FOR             reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    VOID            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    $end            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RBRACKET        reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    LPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    NUMBER          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    TEXT            reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    COLON           reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)
    RETURN          reduce using rule 5 (inst -> STRING NAME EQUAL TEXT COLON .)


state 116

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 139
    inst                           shift and go to state 3

state 117

    (33) inst -> STRING NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 140


state 118

    (6) inst -> BOOL NAME EQUAL BOOLEAN COLON .

    INT             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    STRING          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    BOOL            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FLOAT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NAME            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINT           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    PRINTSTRING     reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    IF              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    WHILE           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    DO              reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    FOR             reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    VOID            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    $end            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RBRACKET        reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    LPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    NUMBER          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    TEXT            reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    COLON           reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)
    RETURN          reduce using rule 6 (inst -> BOOL NAME EQUAL BOOLEAN COLON .)


state 119

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 141
    inst                           shift and go to state 3

state 120

    (32) inst -> BOOL NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 142


state 121

    (7) inst -> FLOAT NAME EQUAL expression COLON .

    INT             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    STRING          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NAME            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    IF              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    DO              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FOR             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    VOID            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    $end            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    TEXT            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    COLON           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RETURN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)


state 122

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 143
    inst                           shift and go to state 3

state 123

    (31) inst -> FLOAT NAME LPAREN params RPAREN . LBRACKET linst RETURN expression COLON RBRACKET

    LBRACKET        shift and go to state 144


state 124

    (13) inst -> PRINT LPAREN expression RPAREN COLON .

    INT             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    STRING          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    BOOL            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FLOAT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINTSTRING     reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    DO              reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    VOID            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    TEXT            reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    COLON           reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RETURN          reduce using rule 13 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 125

    (14) inst -> PRINT LPAREN inst RPAREN COLON .

    INT             reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    STRING          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    BOOL            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    FLOAT           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    NAME            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    PRINT           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    PRINTSTRING     reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    IF              reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    WHILE           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    DO              reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    FOR             reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    VOID            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    $end            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RPAREN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RBRACKET        reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    LPAREN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    NUMBER          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    TEXT            reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    COLON           reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)
    RETURN          reduce using rule 14 (inst -> PRINT LPAREN inst RPAREN COLON .)


state 126

    (15) inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .

    INT             reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    STRING          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    BOOL            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FLOAT           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NAME            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINT           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    PRINTSTRING     reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    IF              reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    WHILE           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    DO              reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    FOR             reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    VOID            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    $end            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RBRACKET        reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    LPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    NUMBER          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    TEXT            reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    COLON           reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)
    RETURN          reduce using rule 15 (inst -> PRINTSTRING LPAREN TEXT RPAREN COLON .)


state 127

    (16) inst -> IF LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 145
    inst                           shift and go to state 3

state 128

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 146
    inst                           shift and go to state 3

state 129

    (18) inst -> DO LBRACKET linst RBRACKET WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 147


state 130

    (19) inst -> FOR LPAREN inst compare COLON . inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 148

state 131

    (21) compare -> expression EQUALS . expression
    (46) expression -> expression EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 149

state 132

    (22) compare -> expression LOWER . expression
    (47) expression -> expression LOWER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 150

state 133

    (23) compare -> expression HIGHER . expression
    (48) expression -> expression HIGHER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 151

state 134

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 152
    inst                           shift and go to state 3

state 135

    (29) inst -> VOID NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 153


state 136

    (35) params -> NAME COLON params .

    RPAREN          reduce using rule 35 (params -> NAME COLON params .)


state 137

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 154
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 138

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 155
    inst                           shift and go to state 3

state 139

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 156
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 140

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 157
    inst                           shift and go to state 3

state 141

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 158
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 142

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 159
    inst                           shift and go to state 3

state 143

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 160
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 144

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET . linst RETURN expression COLON RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 161
    inst                           shift and go to state 3

state 145

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 162
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 146

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 163
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 147

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 164

state 148

    (19) inst -> FOR LPAREN inst compare COLON inst . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 165


state 149

    (21) compare -> expression EQUALS expression .
    (46) expression -> expression EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 21 (compare -> expression EQUALS expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]


state 150

    (22) compare -> expression LOWER expression .
    (47) expression -> expression LOWER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 22 (compare -> expression LOWER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LOWER expression .) ]


state 151

    (23) compare -> expression HIGHER expression .
    (48) expression -> expression HIGHER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 23 (compare -> expression HIGHER expression .)
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74

  ! EQUALS          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]


state 152

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 166
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 153

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 167
    inst                           shift and go to state 3

state 154

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 168

state 155

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 169
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 156

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 170

state 157

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 171
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 158

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 172

state 159

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 173
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 160

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 174

state 161

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst . RETURN expression COLON RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RETURN          shift and go to state 175
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 162

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 163

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 164

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 176
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 165

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 177


state 166

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 167

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 178
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 168

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 179
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 169

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 180

state 170

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 181
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 171

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 182

state 172

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 183
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 173

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 184

state 174

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 185
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 175

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN . expression COLON RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME
    (53) expression -> . TEXT

    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    NAME            shift and go to state 36
    TEXT            shift and go to state 40

    expression                     shift and go to state 186

state 176

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .

    INT             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    BOOL            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FLOAT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NAME            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINTSTRING     reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    VOID            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    $end            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NUMBER          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    TEXT            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    COLON           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)


state 177

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 3
    linst                          shift and go to state 187

state 178

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 179

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 188


state 180

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 189
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 181

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 190


state 182

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 191
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 183

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 192


state 184

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 193
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 185

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 194


state 186

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression . COLON RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 195
    PLUS            shift and go to state 66
    MINUS           shift and go to state 67
    TIMES           shift and go to state 68
    OR              shift and go to state 69
    AND             shift and go to state 70
    EQUALS          shift and go to state 71
    LOWER           shift and go to state 72
    HIGHER          shift and go to state 73
    DIVIDE          shift and go to state 74


state 187

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL TEXT COLON
    (6) inst -> . BOOL NAME EQUAL BOOLEAN COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUSPLUS
    (10) inst -> . NAME MINUSMINUS
    (11) inst -> . NAME PLUS EQUAL NUMBER
    (12) inst -> . NAME MINUS EQUAL NUMBER
    (13) inst -> . PRINT LPAREN expression RPAREN COLON
    (14) inst -> . PRINT LPAREN inst RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN TEXT RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET
    (34) inst -> . INT NAME EQUAL inst
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 196
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 188

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 189

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 197


state 190

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 191

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 198


state 192

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 193

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 199


state 194

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 195

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON . RBRACKET

    RBRACKET        shift and go to state 200


state 196

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    TEXT            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RETURN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)


state 197

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 198

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 199

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)


state 200

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .

    INT             reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    STRING          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    BOOL            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FLOAT           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NAME            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINT           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    PRINTSTRING     reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    IF              reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    WHILE           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    DO              reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    FOR             reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    VOID            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    $end            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RPAREN          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RBRACKET        reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    LPAREN          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    NUMBER          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    TEXT            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    COLON           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)
    RETURN          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RETURN expression COLON RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 103 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 104 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 105 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for OR in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 106 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 107 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for OR in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 108 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 108 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 109 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for OR in state 110 resolved as shift
WARNING: shift/reduce conflict for AND in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 110 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 110 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 111 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 111 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 149 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 149 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 150 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for AND in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 150 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 150 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 151 resolved as shift
WARNING: shift/reduce conflict for OR in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 151 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 151 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 151 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 151 resolved as shift
