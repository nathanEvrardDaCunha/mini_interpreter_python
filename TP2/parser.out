Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLEQUOTE
    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> INT NAME EQUAL expression COLON
Rule 5     inst -> STRING NAME EQUAL expression COLON
Rule 6     inst -> BOOL NAME EQUAL expression COLON
Rule 7     inst -> FLOAT NAME EQUAL expression COLON
Rule 8     inst -> NAME EQUAL expression COLON
Rule 9     inst -> NAME PLUS PLUS
Rule 10    inst -> NAME PLUS EQUAL NUMBER
Rule 11    inst -> NAME MINUS EQUAL NUMBER
Rule 12    inst -> PRINT LPAREN expression RPAREN COLON
Rule 13    NAMES -> NAMES NAME
Rule 14    NAMES -> NAME
Rule 15    inst -> PRINTSTRING LPAREN STRING RPAREN COLON
Rule 16    inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 17    inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
Rule 18    inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
Rule 19    inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
Rule 20    compare -> <empty>
Rule 21    compare -> expression EQUALS expression
Rule 22    compare -> expression LOWER expression
Rule 23    compare -> expression HIGHER expression
Rule 24    inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 25    inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 26    inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 27    inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 28    inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
Rule 29    inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 30    inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 31    inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 32    inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 33    inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
Rule 34    params -> <empty>
Rule 35    params -> NAME COMMA params
Rule 36    params -> NAME
Rule 37    inst -> NAME LPAREN args RPAREN COLON
Rule 38    args -> <empty>
Rule 39    args -> expression
Rule 40    args -> expression COMMA args
Rule 41    expression -> expression PLUS expression
Rule 42    expression -> expression MINUS expression
Rule 43    expression -> expression TIMES expression
Rule 44    expression -> expression OR expression
Rule 45    expression -> expression AND expression
Rule 46    expression -> expression EQUALS expression
Rule 47    expression -> expression LOWER expression
Rule 48    expression -> expression HIGHER expression
Rule 49    expression -> expression DIVIDE expression
Rule 50    expression -> LPAREN expression RPAREN
Rule 51    expression -> NUMBER
Rule 52    expression -> NAME

Terminals, with rules where they appear

AND                  : 45
BOOL                 : 6 27 32
COLON                : 4 5 6 7 8 12 15 19 37
COMMA                : 35 40
DIVIDE               : 49
DO                   : 18
DOUBLEQUOTE          : 
EQUAL                : 4 5 6 7 8 10 11
EQUALS               : 21 46
FLOAT                : 7 26 31
FOR                  : 19
HIGHER               : 23 48
IF                   : 16
INT                  : 4 25 30
LBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33
LOWER                : 22 47
LPAREN               : 12 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 37 50
MINUS                : 11 42
NAME                 : 4 5 6 7 8 9 10 11 13 14 24 25 26 27 28 29 30 31 32 33 35 36 37 52
NUMBER               : 10 11 51
OR                   : 44
PLUS                 : 9 9 10 41
PRINT                : 12
PRINTSTRING          : 15
RBRACKET             : 16 17 18 19 24 25 26 27 28 29 30 31 32 33
RPAREN               : 12 15 16 17 18 19 24 25 26 27 28 29 30 31 32 33 37 50
STRING               : 5 15 28 33
THEN                 : 
TIMES                : 43
VOID                 : 24 29
WHILE                : 17 18
error                : 

Nonterminals, with rules where they appear

NAMES                : 13
args                 : 37 40
compare              : 19
expression           : 4 5 6 7 8 12 16 17 18 21 21 22 22 23 23 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50
inst                 : 2 3 19 19
linst                : 1 2 16 17 18 19 24 25 26 27 28 29 30 31 32 33
params               : 29 30 31 32 33 35
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    $end            reduce using rule 1 (start -> linst .)
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 3

    (3) linst -> inst .

    INT             reduce using rule 3 (linst -> inst .)
    STRING          reduce using rule 3 (linst -> inst .)
    BOOL            reduce using rule 3 (linst -> inst .)
    FLOAT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    PRINTSTRING     reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    DO              reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    VOID            reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> INT . NAME EQUAL expression COLON
    (25) inst -> INT . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (30) inst -> INT . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 17


state 5

    (8) inst -> NAME . EQUAL expression COLON
    (9) inst -> NAME . PLUS PLUS
    (10) inst -> NAME . PLUS EQUAL NUMBER
    (11) inst -> NAME . MINUS EQUAL NUMBER
    (37) inst -> NAME . LPAREN args RPAREN COLON

    EQUAL           shift and go to state 18
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    LPAREN          shift and go to state 21


state 6

    (5) inst -> STRING . NAME EQUAL expression COLON
    (28) inst -> STRING . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (33) inst -> STRING . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 22


state 7

    (6) inst -> BOOL . NAME EQUAL expression COLON
    (27) inst -> BOOL . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (32) inst -> BOOL . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 23


state 8

    (7) inst -> FLOAT . NAME EQUAL expression COLON
    (26) inst -> FLOAT . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (31) inst -> FLOAT . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 24


state 9

    (12) inst -> PRINT . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 25


state 10

    (15) inst -> PRINTSTRING . LPAREN STRING RPAREN COLON

    LPAREN          shift and go to state 26


state 11

    (16) inst -> IF . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 27


state 12

    (17) inst -> WHILE . LPAREN expression RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 28


state 13

    (18) inst -> DO . LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN

    LBRACKET        shift and go to state 29


state 14

    (19) inst -> FOR . LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 30


state 15

    (24) inst -> VOID . NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID . NAME LPAREN params RPAREN LBRACKET linst RBRACKET

    NAME            shift and go to state 31


state 16

    (2) linst -> linst inst .

    INT             reduce using rule 2 (linst -> linst inst .)
    STRING          reduce using rule 2 (linst -> linst inst .)
    BOOL            reduce using rule 2 (linst -> linst inst .)
    FLOAT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    PRINTSTRING     reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    DO              reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    VOID            reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)


state 17

    (4) inst -> INT NAME . EQUAL expression COLON
    (25) inst -> INT NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (30) inst -> INT NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    EQUAL           shift and go to state 32
    LPAREN          shift and go to state 33


state 18

    (8) inst -> NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 35

state 19

    (9) inst -> NAME PLUS . PLUS
    (10) inst -> NAME PLUS . EQUAL NUMBER

    PLUS            shift and go to state 38
    EQUAL           shift and go to state 39


state 20

    (11) inst -> NAME MINUS . EQUAL NUMBER

    EQUAL           shift and go to state 40


state 21

    (37) inst -> NAME LPAREN . args RPAREN COLON
    (38) args -> .
    (39) args -> . expression
    (40) args -> . expression COMMA args
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    RPAREN          reduce using rule 38 (args -> .)
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    args                           shift and go to state 41
    expression                     shift and go to state 42

state 22

    (5) inst -> STRING NAME . EQUAL expression COLON
    (28) inst -> STRING NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (33) inst -> STRING NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    EQUAL           shift and go to state 43
    LPAREN          shift and go to state 44


state 23

    (6) inst -> BOOL NAME . EQUAL expression COLON
    (27) inst -> BOOL NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (32) inst -> BOOL NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    EQUAL           shift and go to state 45
    LPAREN          shift and go to state 46


state 24

    (7) inst -> FLOAT NAME . EQUAL expression COLON
    (26) inst -> FLOAT NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (31) inst -> FLOAT NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    EQUAL           shift and go to state 47
    LPAREN          shift and go to state 48


state 25

    (12) inst -> PRINT LPAREN . expression RPAREN COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 49

state 26

    (15) inst -> PRINTSTRING LPAREN . STRING RPAREN COLON

    STRING          shift and go to state 50


state 27

    (16) inst -> IF LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 51

state 28

    (17) inst -> WHILE LPAREN . expression RPAREN LBRACKET linst RBRACKET
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 52

state 29

    (18) inst -> DO LBRACKET . linst RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 53
    inst                           shift and go to state 3

state 30

    (19) inst -> FOR LPAREN . inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 54

state 31

    (24) inst -> VOID NAME . LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID NAME . LPAREN params RPAREN LBRACKET linst RBRACKET

    LPAREN          shift and go to state 55


state 32

    (4) inst -> INT NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 56

state 33

    (25) inst -> INT NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (30) inst -> INT NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 58
    NAME            shift and go to state 57

  ! RPAREN          [ reduce using rule 34 (params -> .) ]

    params                         shift and go to state 59

state 34

    (52) expression -> NAME .

    COLON           reduce using rule 52 (expression -> NAME .)
    PLUS            reduce using rule 52 (expression -> NAME .)
    MINUS           reduce using rule 52 (expression -> NAME .)
    TIMES           reduce using rule 52 (expression -> NAME .)
    OR              reduce using rule 52 (expression -> NAME .)
    AND             reduce using rule 52 (expression -> NAME .)
    EQUALS          reduce using rule 52 (expression -> NAME .)
    LOWER           reduce using rule 52 (expression -> NAME .)
    HIGHER          reduce using rule 52 (expression -> NAME .)
    DIVIDE          reduce using rule 52 (expression -> NAME .)
    COMMA           reduce using rule 52 (expression -> NAME .)
    RPAREN          reduce using rule 52 (expression -> NAME .)


state 35

    (8) inst -> NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 36

    (50) expression -> LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 70

state 37

    (51) expression -> NUMBER .

    COLON           reduce using rule 51 (expression -> NUMBER .)
    PLUS            reduce using rule 51 (expression -> NUMBER .)
    MINUS           reduce using rule 51 (expression -> NUMBER .)
    TIMES           reduce using rule 51 (expression -> NUMBER .)
    OR              reduce using rule 51 (expression -> NUMBER .)
    AND             reduce using rule 51 (expression -> NUMBER .)
    EQUALS          reduce using rule 51 (expression -> NUMBER .)
    LOWER           reduce using rule 51 (expression -> NUMBER .)
    HIGHER          reduce using rule 51 (expression -> NUMBER .)
    DIVIDE          reduce using rule 51 (expression -> NUMBER .)
    COMMA           reduce using rule 51 (expression -> NUMBER .)
    RPAREN          reduce using rule 51 (expression -> NUMBER .)


state 38

    (9) inst -> NAME PLUS PLUS .

    INT             reduce using rule 9 (inst -> NAME PLUS PLUS .)
    STRING          reduce using rule 9 (inst -> NAME PLUS PLUS .)
    BOOL            reduce using rule 9 (inst -> NAME PLUS PLUS .)
    FLOAT           reduce using rule 9 (inst -> NAME PLUS PLUS .)
    NAME            reduce using rule 9 (inst -> NAME PLUS PLUS .)
    PRINT           reduce using rule 9 (inst -> NAME PLUS PLUS .)
    PRINTSTRING     reduce using rule 9 (inst -> NAME PLUS PLUS .)
    IF              reduce using rule 9 (inst -> NAME PLUS PLUS .)
    WHILE           reduce using rule 9 (inst -> NAME PLUS PLUS .)
    DO              reduce using rule 9 (inst -> NAME PLUS PLUS .)
    FOR             reduce using rule 9 (inst -> NAME PLUS PLUS .)
    VOID            reduce using rule 9 (inst -> NAME PLUS PLUS .)
    $end            reduce using rule 9 (inst -> NAME PLUS PLUS .)
    RBRACKET        reduce using rule 9 (inst -> NAME PLUS PLUS .)
    LPAREN          reduce using rule 9 (inst -> NAME PLUS PLUS .)
    NUMBER          reduce using rule 9 (inst -> NAME PLUS PLUS .)
    COLON           reduce using rule 9 (inst -> NAME PLUS PLUS .)
    RPAREN          reduce using rule 9 (inst -> NAME PLUS PLUS .)


state 39

    (10) inst -> NAME PLUS EQUAL . NUMBER

    NUMBER          shift and go to state 71


state 40

    (11) inst -> NAME MINUS EQUAL . NUMBER

    NUMBER          shift and go to state 72


state 41

    (37) inst -> NAME LPAREN args . RPAREN COLON

    RPAREN          shift and go to state 73


state 42

    (39) args -> expression .
    (40) args -> expression . COMMA args
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 39 (args -> expression .)
    COMMA           shift and go to state 74
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 43

    (5) inst -> STRING NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 75

state 44

    (28) inst -> STRING NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (33) inst -> STRING NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 76
    NAME            shift and go to state 57

  ! RPAREN          [ reduce using rule 34 (params -> .) ]

    params                         shift and go to state 77

state 45

    (6) inst -> BOOL NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 78

state 46

    (27) inst -> BOOL NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (32) inst -> BOOL NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 79
    NAME            shift and go to state 57

  ! RPAREN          [ reduce using rule 34 (params -> .) ]

    params                         shift and go to state 80

state 47

    (7) inst -> FLOAT NAME EQUAL . expression COLON
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 81

state 48

    (26) inst -> FLOAT NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (31) inst -> FLOAT NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 82
    NAME            shift and go to state 57

  ! RPAREN          [ reduce using rule 34 (params -> .) ]

    params                         shift and go to state 83

state 49

    (12) inst -> PRINT LPAREN expression . RPAREN COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 84
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 50

    (15) inst -> PRINTSTRING LPAREN STRING . RPAREN COLON

    RPAREN          shift and go to state 85


state 51

    (16) inst -> IF LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 52

    (17) inst -> WHILE LPAREN expression . RPAREN LBRACKET linst RBRACKET
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 53

    (18) inst -> DO LBRACKET linst . RBRACKET WHILE LPAREN expression RPAREN
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 88
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 54

    (19) inst -> FOR LPAREN inst . compare COLON inst RPAREN LBRACKET linst RBRACKET
    (20) compare -> .
    (21) compare -> . expression EQUALS expression
    (22) compare -> . expression LOWER expression
    (23) compare -> . expression HIGHER expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    COLON           reduce using rule 20 (compare -> .)
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    compare                        shift and go to state 89
    expression                     shift and go to state 90

state 55

    (24) inst -> VOID NAME LPAREN . RPAREN LBRACKET linst RBRACKET
    (29) inst -> VOID NAME LPAREN . params RPAREN LBRACKET linst RBRACKET
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 91
    NAME            shift and go to state 57

  ! RPAREN          [ reduce using rule 34 (params -> .) ]

    params                         shift and go to state 92

state 56

    (4) inst -> INT NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 93
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 57

    (35) params -> NAME . COMMA params
    (36) params -> NAME .

    COMMA           shift and go to state 94
    RPAREN          reduce using rule 36 (params -> NAME .)


state 58

    (25) inst -> INT NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 95


state 59

    (30) inst -> INT NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 96


state 60

    (8) inst -> NAME EQUAL expression COLON .

    INT             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    STRING          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    BOOL            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NAME            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINT           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    IF              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    WHILE           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    DO              reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    FOR             reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    VOID            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    $end            reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    COLON           reduce using rule 8 (inst -> NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 8 (inst -> NAME EQUAL expression COLON .)


state 61

    (41) expression -> expression PLUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 97

state 62

    (42) expression -> expression MINUS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 98

state 63

    (43) expression -> expression TIMES . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 99

state 64

    (44) expression -> expression OR . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 100

state 65

    (45) expression -> expression AND . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 101

state 66

    (46) expression -> expression EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 102

state 67

    (47) expression -> expression LOWER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 103

state 68

    (48) expression -> expression HIGHER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 104

state 69

    (49) expression -> expression DIVIDE . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 105

state 70

    (50) expression -> LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 71

    (10) inst -> NAME PLUS EQUAL NUMBER .

    INT             reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    STRING          reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    BOOL            reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    FLOAT           reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    NAME            reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINT           reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    IF              reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    WHILE           reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    DO              reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    FOR             reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    VOID            reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    $end            reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    LPAREN          reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    NUMBER          reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    COLON           reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)
    RPAREN          reduce using rule 10 (inst -> NAME PLUS EQUAL NUMBER .)


state 72

    (11) inst -> NAME MINUS EQUAL NUMBER .

    INT             reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    STRING          reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    BOOL            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    FLOAT           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    NAME            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINT           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    PRINTSTRING     reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    IF              reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    WHILE           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    DO              reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    FOR             reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    VOID            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    $end            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    RBRACKET        reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    LPAREN          reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    NUMBER          reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    COLON           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)
    RPAREN          reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER .)


state 73

    (37) inst -> NAME LPAREN args RPAREN . COLON

    COLON           shift and go to state 107


state 74

    (40) args -> expression COMMA . args
    (38) args -> .
    (39) args -> . expression
    (40) args -> . expression COMMA args
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    RPAREN          reduce using rule 38 (args -> .)
    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 42
    args                           shift and go to state 108

state 75

    (5) inst -> STRING NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 109
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 76

    (28) inst -> STRING NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 110


state 77

    (33) inst -> STRING NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 111


state 78

    (6) inst -> BOOL NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 112
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 79

    (27) inst -> BOOL NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 113


state 80

    (32) inst -> BOOL NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 114


state 81

    (7) inst -> FLOAT NAME EQUAL expression . COLON
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    COLON           shift and go to state 115
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 82

    (26) inst -> FLOAT NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 116


state 83

    (31) inst -> FLOAT NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 117


state 84

    (12) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 118


state 85

    (15) inst -> PRINTSTRING LPAREN STRING RPAREN . COLON

    COLON           shift and go to state 119


state 86

    (16) inst -> IF LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 120


state 87

    (17) inst -> WHILE LPAREN expression RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 121


state 88

    (18) inst -> DO LBRACKET linst RBRACKET . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 122


state 89

    (19) inst -> FOR LPAREN inst compare . COLON inst RPAREN LBRACKET linst RBRACKET

    COLON           shift and go to state 123


state 90

    (21) compare -> expression . EQUALS expression
    (22) compare -> expression . LOWER expression
    (23) compare -> expression . HIGHER expression
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    EQUALS          shift and go to state 124
    LOWER           shift and go to state 125
    HIGHER          shift and go to state 126
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    DIVIDE          shift and go to state 69


state 91

    (24) inst -> VOID NAME LPAREN RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 127


state 92

    (29) inst -> VOID NAME LPAREN params . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 128


state 93

    (4) inst -> INT NAME EQUAL expression COLON .

    INT             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    STRING          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NAME            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    IF              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    DO              reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    FOR             reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    VOID            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    $end            reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    COLON           reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 4 (inst -> INT NAME EQUAL expression COLON .)


state 94

    (35) params -> NAME COMMA . params
    (34) params -> .
    (35) params -> . NAME COMMA params
    (36) params -> . NAME

    RPAREN          reduce using rule 34 (params -> .)
    NAME            shift and go to state 57

    params                         shift and go to state 129

state 95

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 130
    inst                           shift and go to state 3

state 96

    (30) inst -> INT NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 131


state 97

    (41) expression -> expression PLUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 41 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 41 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 41 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression PLUS expression .) ]


state 98

    (42) expression -> expression MINUS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 42 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 42 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 42 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression MINUS expression .) ]


state 99

    (43) expression -> expression TIMES expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 43 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 43 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 43 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 43 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression TIMES expression .) ]


state 100

    (44) expression -> expression OR expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 44 (expression -> expression OR expression .)
    COMMA           reduce using rule 44 (expression -> expression OR expression .)
    RPAREN          reduce using rule 44 (expression -> expression OR expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression OR expression .) ]


state 101

    (45) expression -> expression AND expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 45 (expression -> expression AND expression .)
    COMMA           reduce using rule 45 (expression -> expression AND expression .)
    RPAREN          reduce using rule 45 (expression -> expression AND expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression AND expression .) ]


state 102

    (46) expression -> expression EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 46 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 46 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]


state 103

    (47) expression -> expression LOWER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 47 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 47 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 47 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LOWER expression .) ]


state 104

    (48) expression -> expression HIGHER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 48 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 48 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 48 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]


state 105

    (49) expression -> expression DIVIDE expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 49 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 49 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 49 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! PLUS            [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression DIVIDE expression .) ]


state 106

    (50) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 50 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (expression -> LPAREN expression RPAREN .)


state 107

    (37) inst -> NAME LPAREN args RPAREN COLON .

    INT             reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    STRING          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    BOOL            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    FLOAT           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    NAME            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINT           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    PRINTSTRING     reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    IF              reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    WHILE           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    DO              reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    FOR             reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    VOID            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    $end            reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    RBRACKET        reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    LPAREN          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    NUMBER          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    COLON           reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)
    RPAREN          reduce using rule 37 (inst -> NAME LPAREN args RPAREN COLON .)


state 108

    (40) args -> expression COMMA args .

    RPAREN          reduce using rule 40 (args -> expression COMMA args .)


state 109

    (5) inst -> STRING NAME EQUAL expression COLON .

    INT             reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    STRING          reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    BOOL            reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    NAME            reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    PRINT           reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    IF              reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    WHILE           reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    DO              reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    FOR             reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    VOID            reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    $end            reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    COLON           reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 5 (inst -> STRING NAME EQUAL expression COLON .)


state 110

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 132
    inst                           shift and go to state 3

state 111

    (33) inst -> STRING NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 133


state 112

    (6) inst -> BOOL NAME EQUAL expression COLON .

    INT             reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    STRING          reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    BOOL            reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    NAME            reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    PRINT           reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    IF              reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    WHILE           reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    DO              reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    FOR             reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    VOID            reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    $end            reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    COLON           reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 6 (inst -> BOOL NAME EQUAL expression COLON .)


state 113

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 134
    inst                           shift and go to state 3

state 114

    (32) inst -> BOOL NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 135


state 115

    (7) inst -> FLOAT NAME EQUAL expression COLON .

    INT             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    STRING          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    BOOL            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FLOAT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NAME            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINT           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    PRINTSTRING     reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    IF              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    WHILE           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    DO              reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    FOR             reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    VOID            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    $end            reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RBRACKET        reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    COLON           reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)
    RPAREN          reduce using rule 7 (inst -> FLOAT NAME EQUAL expression COLON .)


state 116

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 136
    inst                           shift and go to state 3

state 117

    (31) inst -> FLOAT NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 137


state 118

    (12) inst -> PRINT LPAREN expression RPAREN COLON .

    INT             reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    STRING          reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    BOOL            reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FLOAT           reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINTSTRING     reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    DO              reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    VOID            reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    COLON           reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RPAREN          reduce using rule 12 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 119

    (15) inst -> PRINTSTRING LPAREN STRING RPAREN COLON .

    INT             reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    STRING          reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    BOOL            reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    FLOAT           reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    NAME            reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    PRINT           reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    PRINTSTRING     reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    IF              reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    WHILE           reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    DO              reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    FOR             reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    VOID            reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    $end            reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    RBRACKET        reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    LPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    NUMBER          reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    COLON           reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)
    RPAREN          reduce using rule 15 (inst -> PRINTSTRING LPAREN STRING RPAREN COLON .)


state 120

    (16) inst -> IF LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 138
    inst                           shift and go to state 3

state 121

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 139
    inst                           shift and go to state 3

state 122

    (18) inst -> DO LBRACKET linst RBRACKET WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 140


state 123

    (19) inst -> FOR LPAREN inst compare COLON . inst RPAREN LBRACKET linst RBRACKET
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 141

state 124

    (21) compare -> expression EQUALS . expression
    (46) expression -> expression EQUALS . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 142

state 125

    (22) compare -> expression LOWER . expression
    (47) expression -> expression LOWER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 143

state 126

    (23) compare -> expression HIGHER . expression
    (48) expression -> expression HIGHER . expression
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 144

state 127

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 145
    inst                           shift and go to state 3

state 128

    (29) inst -> VOID NAME LPAREN params RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 146


state 129

    (35) params -> NAME COMMA params .

    RPAREN          reduce using rule 35 (params -> NAME COMMA params .)


state 130

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 147
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 131

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 148
    inst                           shift and go to state 3

state 132

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 149
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 133

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 150
    inst                           shift and go to state 3

state 134

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 151
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 135

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 152
    inst                           shift and go to state 3

state 136

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 153
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 137

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 154
    inst                           shift and go to state 3

state 138

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 155
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 139

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 156
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 140

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN . expression RPAREN
    (41) expression -> . expression PLUS expression
    (42) expression -> . expression MINUS expression
    (43) expression -> . expression TIMES expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression LOWER expression
    (48) expression -> . expression HIGHER expression
    (49) expression -> . expression DIVIDE expression
    (50) expression -> . LPAREN expression RPAREN
    (51) expression -> . NUMBER
    (52) expression -> . NAME

    LPAREN          shift and go to state 36
    NUMBER          shift and go to state 37
    NAME            shift and go to state 34

    expression                     shift and go to state 157

state 141

    (19) inst -> FOR LPAREN inst compare COLON inst . RPAREN LBRACKET linst RBRACKET

    RPAREN          shift and go to state 158


state 142

    (21) compare -> expression EQUALS expression .
    (46) expression -> expression EQUALS expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 21 (compare -> expression EQUALS expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! EQUALS          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]


state 143

    (22) compare -> expression LOWER expression .
    (47) expression -> expression LOWER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 22 (compare -> expression LOWER expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! EQUALS          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LOWER expression .) ]


state 144

    (23) compare -> expression HIGHER expression .
    (48) expression -> expression HIGHER expression .
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COLON           reduce using rule 23 (compare -> expression HIGHER expression .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69

  ! EQUALS          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 48 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression HIGHER expression .) ]


state 145

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 159
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 146

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    linst                          shift and go to state 160
    inst                           shift and go to state 3

state 147

    (25) inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 25 (inst -> INT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 148

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 161
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 149

    (28) inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 28 (inst -> STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 150

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 162
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 151

    (27) inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 27 (inst -> BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 152

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 163
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 153

    (26) inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 26 (inst -> FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 154

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 164
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 155

    (16) inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 16 (inst -> IF LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 156

    (17) inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 17 (inst -> WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET .)


state 157

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression . RPAREN
    (41) expression -> expression . PLUS expression
    (42) expression -> expression . MINUS expression
    (43) expression -> expression . TIMES expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . LOWER expression
    (48) expression -> expression . HIGHER expression
    (49) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 165
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    OR              shift and go to state 64
    AND             shift and go to state 65
    EQUALS          shift and go to state 66
    LOWER           shift and go to state 67
    HIGHER          shift and go to state 68
    DIVIDE          shift and go to state 69


state 158

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 166


state 159

    (24) inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 24 (inst -> VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET .)


state 160

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 167
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 161

    (30) inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 30 (inst -> INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 162

    (33) inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 33 (inst -> STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 163

    (32) inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 32 (inst -> BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 164

    (31) inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 31 (inst -> FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 165

    (18) inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .

    INT             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    BOOL            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FLOAT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NAME            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINT           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    PRINTSTRING     reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    VOID            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    $end            reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    NUMBER          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    COLON           reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (inst -> DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN .)


state 166

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 3
    linst                          shift and go to state 168

state 167

    (29) inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 29 (inst -> VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET .)


state 168

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . INT NAME EQUAL expression COLON
    (5) inst -> . STRING NAME EQUAL expression COLON
    (6) inst -> . BOOL NAME EQUAL expression COLON
    (7) inst -> . FLOAT NAME EQUAL expression COLON
    (8) inst -> . NAME EQUAL expression COLON
    (9) inst -> . NAME PLUS PLUS
    (10) inst -> . NAME PLUS EQUAL NUMBER
    (11) inst -> . NAME MINUS EQUAL NUMBER
    (12) inst -> . PRINT LPAREN expression RPAREN COLON
    (15) inst -> . PRINTSTRING LPAREN STRING RPAREN COLON
    (16) inst -> . IF LPAREN expression RPAREN LBRACKET linst RBRACKET
    (17) inst -> . WHILE LPAREN expression RPAREN LBRACKET linst RBRACKET
    (18) inst -> . DO LBRACKET linst RBRACKET WHILE LPAREN expression RPAREN
    (19) inst -> . FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET
    (24) inst -> . VOID NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (25) inst -> . INT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (26) inst -> . FLOAT NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (27) inst -> . BOOL NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (28) inst -> . STRING NAME LPAREN RPAREN LBRACKET linst RBRACKET
    (29) inst -> . VOID NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (30) inst -> . INT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (31) inst -> . FLOAT NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (32) inst -> . BOOL NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (33) inst -> . STRING NAME LPAREN params RPAREN LBRACKET linst RBRACKET
    (37) inst -> . NAME LPAREN args RPAREN COLON

    RBRACKET        shift and go to state 169
    INT             shift and go to state 4
    STRING          shift and go to state 6
    BOOL            shift and go to state 7
    FLOAT           shift and go to state 8
    NAME            shift and go to state 5
    PRINT           shift and go to state 9
    PRINTSTRING     shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    FOR             shift and go to state 14
    VOID            shift and go to state 15

    inst                           shift and go to state 16

state 169

    (19) inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .

    INT             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    STRING          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    BOOL            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FLOAT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NAME            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    PRINTSTRING     reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    IF              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    DO              reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    FOR             reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    VOID            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    $end            reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    LPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    NUMBER          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    COLON           reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)
    RPAREN          reduce using rule 19 (inst -> FOR LPAREN inst compare COLON inst RPAREN LBRACKET linst RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 33 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 46 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 48 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 97 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 98 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 99 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 99 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 100 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 101 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 102 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 103 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 104 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 105 resolved as shift
WARNING: shift/reduce conflict for OR in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 105 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 142 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 142 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 143 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 143 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 144 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 144 resolved as shift
