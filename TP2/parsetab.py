
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COLON DIVIDE EQUAL EQUALS FOR HIGHER IF LCOMA LOWER LPAREN MINUS NAME NUMBER OR PLUS PRINT RCOMA RPAREN THEN TIMES WHILE start : linstlinst : linst inst \n            | inst inst : NAME EQUAL expression COLONinst : PRINT LPAREN expression RPAREN COLONinst : IF LPAREN expression RPAREN LCOMA linst RCOMAexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression EQUALS expression\n                  | expression LOWER expression\n                  | expression HIGHER expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,2,3,7,8,9,10,13,17,18,19,20,21,22,23,24,25,26,40,41,42,43,],[4,4,-3,-2,11,11,11,11,-4,11,11,11,11,11,11,11,11,11,-5,4,4,-6,]),'PRINT':([0,2,3,7,17,40,41,42,43,],[5,5,-3,-2,-4,-5,5,5,-6,]),'IF':([0,2,3,7,17,40,41,42,43,],[6,6,-3,-2,-4,-5,6,6,-6,]),'$end':([1,2,3,7,17,40,43,],[0,-1,-3,-2,-4,-5,-6,]),'RCOMA':([3,7,17,40,42,43,],[-3,-2,-4,-5,43,-6,]),'EQUAL':([4,],[8,]),'LPAREN':([5,6,8,9,10,13,18,19,20,21,22,23,24,25,26,],[9,10,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([8,9,10,13,18,19,20,21,22,23,24,25,26,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'COLON':([11,12,14,28,30,31,32,33,34,35,36,37,38,39,],[-18,17,-17,40,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,]),'PLUS':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,18,-17,18,18,18,18,18,18,18,18,18,18,18,18,-16,]),'MINUS':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,19,-17,19,19,19,19,19,19,19,19,19,19,19,19,-16,]),'TIMES':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,20,-17,20,20,20,20,20,20,20,20,20,20,20,20,-16,]),'OR':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,21,-17,21,21,21,21,21,21,21,21,21,21,21,21,-16,]),'AND':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,22,-17,22,22,22,22,22,22,22,22,22,22,22,22,-16,]),'EQUALS':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,23,-17,23,23,23,23,23,23,23,23,23,23,23,23,-16,]),'LOWER':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,24,-17,24,24,24,24,24,24,24,24,24,24,24,24,-16,]),'HIGHER':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,25,-17,25,25,25,25,25,25,25,25,25,25,25,25,-16,]),'DIVIDE':([11,12,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,26,-17,26,26,26,26,26,26,26,26,26,26,26,26,-16,]),'RPAREN':([11,14,15,16,27,30,31,32,33,34,35,36,37,38,39,],[-18,-17,28,29,39,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,]),'LCOMA':([29,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'linst':([0,41,],[2,42,]),'inst':([0,2,41,42,],[3,7,3,7,]),'expression':([8,9,10,13,18,19,20,21,22,23,24,25,26,],[12,15,16,27,30,31,32,33,34,35,36,37,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> linst','start',1,'p_start','version projet V0V2.py',74),
  ('linst -> linst inst','linst',2,'p_line','version projet V0V2.py',102),
  ('linst -> inst','linst',1,'p_line','version projet V0V2.py',103),
  ('inst -> NAME EQUAL expression COLON','inst',4,'p_statement_assign','version projet V0V2.py',112),
  ('inst -> PRINT LPAREN expression RPAREN COLON','inst',5,'p_statement_print','version projet V0V2.py',116),
  ('inst -> IF LPAREN expression RPAREN LCOMA linst RCOMA','inst',7,'p_statement_if','version projet V0V2.py',121),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','version projet V0V2.py',126),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','version projet V0V2.py',127),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','version projet V0V2.py',128),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','version projet V0V2.py',129),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','version projet V0V2.py',130),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','version projet V0V2.py',131),
  ('expression -> expression LOWER expression','expression',3,'p_expression_binop','version projet V0V2.py',132),
  ('expression -> expression HIGHER expression','expression',3,'p_expression_binop','version projet V0V2.py',133),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','version projet V0V2.py',134),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','version projet V0V2.py',140),
  ('expression -> NUMBER','expression',1,'p_expression_number','version projet V0V2.py',144),
  ('expression -> NAME','expression',1,'p_expression_name','version projet V0V2.py',149),
]
